{"version":3,"sources":["types.ts","store/actions/actions.ts","store/reducers/reducer.ts","store/reducers/index.ts","store/index.ts","styles/styles.ts","components/shared/MainContainer.tsx","components/shared/TableSortedHeader.tsx","components/shared/helpers.tsx","components/expenses/Expenses.tsx","components/home/AddCar.tsx","components/home/Cars.tsx","components/myCar/MyCar.tsx","components/LogIn.tsx","components/SignUp.tsx","components/Footer.tsx","components/AppContainer.tsx","components/routes/Loader.tsx","components/routes/NotFound.tsx","components/routes/AppRoutes.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["FUELTYPE","UPDATE_USER","UPDATE_MY_CAR","UPDATE_MY_FILTERS","UPDATE_FILTERS","UPDATE_EXPENSE_FILTERS","UPDATE_CARS","CLEAR_ALL","updateUserStore","user","action","updateMyCar","myCar","updateCars","cars","updateFilters","filter","updateMyFilters","updateExpenseFilters","clearAll","initialState","carsToCompareState","filters","fuel","maintenance","service","tax","expensesFilter","myFilters","sosellReducer","state","type","Actions","payload","app","combineReducers","appState","createReducer","asyncReducers","store","createStore","useStyles","makeStyles","theme","root","height","justifyContent","backgroundColor","navBotton","navBar","textAlign","color","palette","text","secondary","navigation","alignContent","display","avatar","marginLeft","marginTop","borderRadius","main","overflow","appName","fontSize","fontFamily","fontWeight","paddingTop","footerText","padding","footerContainer","flex","width","bottom","zIndex","position","errorText","accordionHeading","typography","pxToRem","fontWeightRegular","checkboxContainer","margin","spacing","button","datepickerContainer","flexWrap","textField","datepickerTextField","marginRight","selectDropdownStyle","control","styles","cursor","marginBottom","boxShadow","borderColor","option","isDisabled","isSelected","menu","borderTop","selectDropdownDateStyle","Months","MainContainer","props","sideComponent","mainComponent","localClasses","useLocalStyles","Grid","container","className","item","xs","leftContainer","rightContainer","createStyles","window","innerHeight","borderRight","TableSortedHeader","order","orderBy","onRequestSort","headCells","deleteRowCell","totalCell","classes","createSortHandler","property","event","TableHead","TableRow","TableCell","deleteCell","map","headCell","align","disablePadding","sortDirection","id","TableSortLabel","active","direction","onClick","label","visuallyHidden","border","clip","top","buttonContainer","paddingLeft","paddingRight","getFormattedDate","date","year","getFullYear","getMonth","toString","padStart","getDate","generateMockExpenses","car","now","Date","lastYear","getDay","randomDate","start","end","Math","random","randomExpense","uuidv4","cost","Number","toFixed","mileage","carCopy","index","expenses","serviceExpenses","push","maintenanceExpenses","roadTaxExpenses","fuelExpenses","costPerUnit","quantity","Alert","elevation","variant","Expenses","globalClasses","useSelector","dispatch","useDispatch","SidePanel","Accordion","expanded","AccordionSummary","expandIcon","aria-controls","AccordionDetails","FormControl","component","FormGroup","RadioGroup","aria-label","name","value","onChange","target","FormControlLabel","Radio","size","renderMainPanel","onSave","expense","myCarCopy","onDelete","f","expenseFilter","ServiceAndMaintenanceExpensesPanel","useState","setMileage","setCost","setOrder","setOrderBy","sortedList","orderSerManinExpBy","mainContainer","selectContainer","InputLabel","htmlFor","OutlinedInput","required","endAdornment","InputAdornment","labelWidth","startAdornment","undefined","error","Button","autoFocus","disabled","tableContainer","TableContainer","Paper","Table","numeric","TableBody","length","get","colSpan","total","forEach","exp","expensesTotal","FuelExpensesPanel","setCostPerUnit","setQuantity","orderFuelExpBy","fuelType","ELECTRIC","fuelExpensesTotal","items","sortBy","lowerCase","reverse","AddCar","open","setOpen","setOpenSuccessSnackbar","make","setMake","model","setModel","setYear","setFuelType","makes","useMemo","_","uniqBy","carsData","c","years","carsByYear","cd","models","fuelTypes","DIESEL","PETROL","HYBRID","handleClose","handleChange","data","setOption","selectedMake","find","m","selectedModel","selectedYear","y","selectedFuelTypes","isValid","Dialog","fullScreen","onClose","TransitionComponent","Transition","AppBar","appBar","Toolbar","toolbar","IconButton","edge","Typography","title","floor","mileageTolerance","milesTolerance","yearTolerance","carWithMockExpenses","options","defaultValue","components","IndicatorSeparator","React","forwardRef","ref","Slide","Cars","openAddCarDialog","setOpenAddCarDialog","openSuccessSnackbar","toMonth","setToMonth","toYear","setToYear","fromMonth","setFromMonth","fromYear","setFromYear","from","indexOf","to","period","monthDiff","orderArrayBy","checked","yearsList","i","getYearOptions","months","selectedMonthFrom","selectedMonthTo","selectedYearTo","selectedYearFrom","startIcon","List","listContainer","dense","vehicle","ListItem","ListItemText","primary","ListItemSecondaryAction","newCars","removeVehicle","Divider","Checkbox","MainPanel","ResponsiveContainer","BarChart","Name","Fuel","getFuelExpensesTotal","Service","getServiceExpensesTotal","Maintenance","getMaintenanceExpensesTotal","getRoadTaxExpensesTotal","carData","right","left","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","tickFormatter","Tooltip","Legend","Bar","barSize","stackId","fill","hc","boldText","getMiles","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","severity","maxHeight","maxWidth","expensesState","roadTaxCost","dateFrom","dateTo","mileages","fe","max","min","fuelTotal","serviceTotal","s","maintenanceTotal","roadTaxTotal","MyCar","carYear","setCarYear","setMileageTolerance","setMilesTolerance","setYearTolerance","myMake","myModel","myYear","myFuelType","filterYears","r","selectedFilteredYear","handleMakeChange","handleYearChange","clsx","textFieldContainer","mc","handleModelChange","handleFuelChange","monthlyFuelExpenses","ex","month","monthlyServiceExpenses","monthlyMaintenanceExpenses","monthlyRoadTaxExpenses","fuelCost","serviceCost","maintenanceCost","mfe","mse","mme","mrte","expensesData","unit","minWidth","DialogTitle","withStyles","closeButton","grey","children","other","disableTypography","DialogContent","MuiDialogContent","DialogActions","MuiDialogActions","LogIn","username","setUsername","password","showPassword","values","setValues","aria-labelledby","fullWidth","dividers","onMouseDown","preventDefault","Visibility","VisibilityOff","Link","href","style","SignUp","email","setEmail","isEmailValid","setIsEmailValid","isUserNameValid","setIsUsernameValid","is1PassValid","setIs1PassValid","is2PassValid","setIs2PassValid","firstPassword","showFirstPassword","secondPassword","showSecondPassword","handleMouseDownPassword","Footer","AppContainer","history","useHistory","navValue","setNavValue","openLoginDialog","setOpenLoginDialog","openSignUpDialog","setOpenSignUpDialog","useEffect","sm","Avatar","src","Tabs","tabsRoot","TabIndicatorProps","textColor","newValue","Tab","tabRoot","tabHeight","minHeight","alignItems","Loader","alt","defaultFont","join","wrapper","logoContainer","flexBasis","image","body","NotFound","useTheme","AppRoutes","basename","fallback","exact","path","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9fbb65d9.chunk.js","sourcesContent":["\r\nexport interface IRootState {\r\n  readonly app: App;\r\n}\r\n\r\ninterface App {\r\n  readonly appState: AppState;\r\n}\r\n\r\nexport interface AppState {\r\n  readonly user?: User;\r\n  readonly myCar?: CarData;\r\n  readonly carsToCompareState?: CarData[];\r\n  readonly filters: IFilters;\r\n  readonly myFilters: IFilters;\r\n  readonly expensesFilter: string;\r\n};\r\n\r\nexport interface User {\r\n  email?: string;\r\n  username?: string;\r\n  car?: CarData;\r\n}\r\n\r\nexport interface IFilters {\r\n  fuel: boolean,\r\n  maintenance: boolean,\r\n  service: boolean,\r\n  tax: boolean\r\n}\r\n\r\nexport interface CarData {\r\n  id: string;\r\n  car: Car;\r\n  mileage: number;\r\n  fuelType: FUELTYPE;\r\n  mileageTolerance: number;\r\n  yearTolerance: number;\r\n  milesTolerance: number;\r\n  expenses: IExpenses;\r\n}\r\n\r\nexport interface IExpenses {\r\n  fuelExpenses: IFuelExpense[];\r\n  serviceExpenses: IServiceExpense[];\r\n  maintenanceExpenses: IMaintenanceExpense[];\r\n  roadTaxExpenses: IRoadTaxExpense[];\r\n}\r\n\r\nexport interface IMaintenanceExpense {\r\n  id: string;\r\n  date: Date;\r\n  mileage: number;\r\n  cost: number;\r\n}\r\n\r\nexport interface IServiceExpense {\r\n  id: string;\r\n  date: Date;\r\n  mileage: number;\r\n  cost: number;\r\n}\r\n\r\nexport interface IFuelExpense {\r\n  id: string;\r\n  date: Date;\r\n  costPerUnit: number;\r\n  quantity: number;\r\n  mileage: number;\r\n}\r\n\r\nexport interface IRoadTaxExpense {\r\n  id: string;\r\n  date: Date;\r\n  mileage: number;\r\n  cost: number;\r\n}\r\n\r\nexport type OptionType = {\r\n  value: string | number;\r\n  label: string | number;\r\n}\r\n\r\nexport type CarChartData = {\r\n  Name: string;\r\n  Fuel: number;\r\n  Service: number;\r\n  Maintenance: number;\r\n  'Road Tax': number;\r\n};\r\n\r\nexport enum FUELTYPE {\r\n  PETROL = \"Petrol\",\r\n  DIESEL = \"Diesel\",\r\n  ELECTRIC = \"Electric\",\r\n  HYBRID = \"Hybrid\",\r\n}\r\n\r\nexport type Car = {\r\n  year: number;\r\n  make: string;\r\n  model: string;\r\n}\r\n\r\nexport type Order = 'asc' | 'desc';\r\n\r\nexport const Months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec']\r\n","import { action } from 'typesafe-actions'; \r\nimport { ActionType } from \"typesafe-actions\";\r\nimport { CarData, IFilters } from '../../types';\r\n\r\nexport const UPDATE_USER = \"UPDATE_USER\";\r\nexport const UPDATE_MY_CAR = \"UPDATE_MY_CAR\";\r\nexport const UPDATE_MY_FILTERS = \"UPDATE_MY_FILTERS\";\r\nexport const UPDATE_FILTERS = \"UPDATE_FILTERS\";\r\nexport const UPDATE_EXPENSE_FILTERS = \"UPDATE_EXPENSE_FILTERS\";\r\nexport const UPDATE_CARS = \"UPDATE_CARS\";\r\nexport const CLEAR_ALL = \"CLEAR_ALL\";\r\n\r\n/* Actions */ \r\n\r\nexport const updateUserStore = (user: any) => { \r\n    return action(UPDATE_USER, {user} );\r\n}\r\n\r\nexport const updateMyCar = (myCar: CarData) => { \r\n    return action(UPDATE_MY_CAR, {myCar} );\r\n}\r\n\r\nexport const updateCars = (cars: CarData[]) => { \r\n    return action(UPDATE_CARS, {cars} );\r\n}\r\n\r\nexport const updateFilters = (filter: IFilters) => { \r\n    return action(UPDATE_FILTERS, {filter} );\r\n}\r\n\r\nexport const updateMyFilters = (filter: IFilters) => { \r\n    return action(UPDATE_MY_FILTERS, {filter} );\r\n}\r\n\r\nexport const updateExpenseFilters = (filter: string) => { \r\n    return action(UPDATE_EXPENSE_FILTERS, {filter} );\r\n}\r\n\r\nexport const clearAll = () => { \r\n    return action(CLEAR_ALL);\r\n}\r\n\r\nconst actions = { updateUserStore, updateFilters, updateMyFilters, updateExpenseFilters, updateMyCar, updateCars, clearAll } \r\n      \r\nexport type Actions = ActionType<typeof actions>","import { AppState, User, CarData } from '../../types';\r\nimport * as Actions from '../actions/actions';\r\n\r\nconst initialState: AppState = {\r\n  user: {} as User,\r\n  myCar: {} as CarData,\r\n  carsToCompareState: [] as CarData[],\r\n  filters: {\r\n    fuel: true,\r\n    maintenance: true,\r\n    service: true,\r\n    tax: true\r\n  },\r\n  expensesFilter: 'fuel',\r\n  myFilters: {\r\n    fuel: true,\r\n    maintenance: true,\r\n    service: true,\r\n    tax: true\r\n  }\r\n}\r\n\r\nconst sosellReducer = (state: AppState = initialState, action: Actions.Actions) => {\r\n\r\n  switch (action.type) {\r\n    case Actions.UPDATE_USER:\r\n      return {\r\n        ...state,\r\n        user: action.payload.user,\r\n      };\r\n    case Actions.UPDATE_FILTERS:\r\n      return {\r\n        ...state,\r\n        filters: action.payload.filter,\r\n      };\r\n    case Actions.UPDATE_MY_CAR:\r\n      return {\r\n        ...state,\r\n        myCar: action.payload.myCar,\r\n      };\r\n    case Actions.UPDATE_CARS:\r\n      return {\r\n        ...state,\r\n        carsToCompareState: action.payload.cars,\r\n      };\r\n    case Actions.UPDATE_EXPENSE_FILTERS:\r\n      return {\r\n        ...state,\r\n        expensesFilter: action.payload.filter,\r\n      };\r\n    case Actions.UPDATE_MY_FILTERS:\r\n      return {\r\n        ...state,\r\n        myFilters: action.payload.filter,\r\n      };\r\n    case Actions.CLEAR_ALL:\r\n      return initialState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default sosellReducer;\r\n","import { combineReducers } from 'redux';\r\nimport { AppState } from '../../types';\r\nimport appState from './reducer';\r\n\r\nconst app = combineReducers({\r\n  appState,\r\n});\r\n\r\nexport type RootState = {\r\n  app: {\r\n    appState: AppState;\r\n  };\r\n};\r\n\r\nconst createReducer = (asyncReducers: any) =>\r\n  combineReducers({\r\n    app,\r\n    ...asyncReducers,\r\n  });\r\n\r\nexport default createReducer;\r\n","import { createStore } from 'redux';\r\nimport createReducer from './reducers';\r\n\r\nconst store = createStore(createReducer(null));\r\n\r\nexport default store;\r\n","import { makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n  root: {\r\n    height: '56px',\r\n    justifyContent: 'left',\r\n    backgroundColor: '#cecdcd',\r\n  },\r\n  navBotton: {\r\n  },\r\n  navBar: {\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n    backgroundColor: '#83B3AB',\r\n    height: '80px',\r\n  },\r\n  navigation: {\r\n    alignContent: 'flex-start',\r\n    display: 'flex',\r\n    backgroundColor: '#83B3AB',\r\n  },\r\n  avatar: {\r\n    marginLeft: 15,\r\n    marginTop: 2,\r\n    borderRadius: 22,\r\n  },\r\n  main: {\r\n    overflow: 'hidden',\r\n  },\r\n  appName: {\r\n    fontSize: '1rem',\r\n    fontFamily: 'Helvetica',\r\n    fontWeight: 800,\r\n    color: 'black',\r\n    paddingTop: 15,\r\n    display: 'flex',\r\n    marginLeft: 40,\r\n    alignContent: 'flex-start',\r\n  },\r\n  footerText: {\r\n    fontSize: '0.7rem',\r\n    fontFamily: 'Helvetica',\r\n    fontWeight: 200,\r\n    color: 'black',\r\n    padding: 7\r\n  },\r\n  footerContainer: {\r\n    flex: 1,\r\n    width: '100%',\r\n    alignContent: 'center',\r\n    justifyContent: 'center',\r\n    bottom: '0',\r\n    height: 30,\r\n    backgroundColor: '#83B3AB',\r\n    zIndex: 999,\r\n    position: 'absolute',\r\n  },\r\n  errorText: {\r\n    color: 'red',\r\n    fontSize: '0.7rem',\r\n    fontFamily: 'Helvetica',\r\n    fontWeight: 200,\r\n  },\r\n  accordionHeading: {\r\n    fontSize: theme.typography.pxToRem(13),\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n  },\r\n  checkboxContainer: {\r\n    margin: theme.spacing(3),\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  datepickerContainer: {\r\n\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  textField: {\r\n    width: '60ch',\r\n  },\r\n  datepickerTextField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200,\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n\r\n\r\nexport const selectDropdownStyle = {\r\n  control: (styles: any) => ({\r\n    ...styles,\r\n    backgroundColor: 'white',\r\n    fontSize: 'medium',\r\n    width: '200px',\r\n    cursor: 'pointer',\r\n    color: 'black',\r\n    marginBottom: 15,\r\n    boxShadow: '0px 0px #888888',\r\n    '&:hover': {\r\n      borderColor: 'black',\r\n    },\r\n  }),\r\n  option: (styles: any, { isDisabled, isSelected }: any) => {\r\n    return {\r\n      ...styles,\r\n      color: isSelected ? 'black' : 'black',\r\n      backgroundColor: isSelected ? 'white' : 'white',\r\n      cursor: isDisabled ? 'not-allowed' : 'pointer',\r\n    };\r\n  },\r\n  menu: (styles: any) => ({\r\n    ...styles,\r\n    width: '200px',\r\n    marginTop: '0',\r\n    borderRadius: '0',\r\n    borderTop: '0',\r\n  }),\r\n\r\n};\r\n\r\nexport const selectDropdownDateStyle = {\r\n  control: (styles: any) => ({\r\n    ...styles,\r\n    backgroundColor: 'white',\r\n    fontSize: 'medium',\r\n    width: '110px',\r\n    cursor: 'pointer',\r\n    color: 'black',\r\n    marginBottom: 15,\r\n    boxShadow: '0px 0px #888888',\r\n    '&:hover': {\r\n      borderColor: 'black',\r\n    },\r\n  }),\r\n  option: (styles: any, { isDisabled, isSelected }: any) => {\r\n    return {\r\n      ...styles,\r\n      color: isSelected ? 'black' : 'black',\r\n      backgroundColor: isSelected ? 'white' : 'white',\r\n      cursor: isDisabled ? 'not-allowed' : 'pointer',\r\n    };\r\n  },\r\n  menu: (styles: any) => ({\r\n    ...styles,\r\n    width: '110px',\r\n    marginTop: '0',\r\n    borderRadius: '0',\r\n    borderTop: '0',\r\n  }),\r\n\r\n};","import { createStyles, Grid, makeStyles } from '@material-ui/core';\r\nimport React from 'react';\r\n\r\ninterface MainContainerProps {\r\n    sideComponent?: React.ReactElement;\r\n    mainComponent: React.ReactElement;\r\n}\r\n\r\nconst MainContainer: React.FC<MainContainerProps> = (props) => {\r\n    const { sideComponent, mainComponent } = props;\r\n    const localClasses = useLocalStyles();\r\n    return (\r\n        <Grid container spacing={3} className={localClasses.root}>\r\n            <Grid item xs={3} className={localClasses.leftContainer}>\r\n                {sideComponent}\r\n            </Grid>\r\n            <Grid item xs={9} className={localClasses.rightContainer}>\r\n                {mainComponent}\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n};\r\n\r\nexport default MainContainer;\r\n\r\nconst useLocalStyles = makeStyles(() =>\r\n    createStyles({\r\n        root: {\r\n            overflow: 'auto',\r\n            marginBottom: 10,\r\n            marginTop: 5,\r\n            marginLeft: 5,\r\n            width: '100%',\r\n            height: window.innerHeight - 90,\r\n        },\r\n        leftContainer: {\r\n            backgroundColor: '#f9fafc',\r\n            borderRight: '1px solid #e2e1e1',\r\n        },\r\n        rightContainer: {\r\n            backgroundColor: '#f9fafc'\r\n        }\r\n    }),\r\n);","import { createStyles, makeStyles, TableCell, TableHead, TableRow, TableSortLabel, Theme } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { Order } from '../../types';\r\n\r\nexport interface HeadCell {\r\n    disablePadding: boolean;\r\n    id: string;\r\n    label: string;\r\n    numeric: boolean;\r\n}\r\n\r\ninterface TableSortedHeaderProps {\r\n    onRequestSort: (event: React.MouseEvent<unknown>, property: string) => void;\r\n    order: Order;\r\n    orderBy: string;\r\n    headCells: HeadCell[];\r\n    deleteRowCell?: boolean;\r\n    totalCell?: string;\r\n}\r\n\r\nconst TableSortedHeader: React.FC<TableSortedHeaderProps> = (props) => {\r\n    const { order, orderBy, onRequestSort, headCells, deleteRowCell, totalCell } = props;\r\n\r\n    const classes = useStyles();\r\n\r\n    const createSortHandler = (property: string) => (event: React.MouseEvent<unknown>) => {\r\n        onRequestSort(event, property);\r\n    };\r\n\r\n    return (\r\n        <TableHead>\r\n            <TableRow>\r\n                    {deleteRowCell &&\r\n                        <TableCell className={classes.deleteCell} >\r\n                            \r\n                        </TableCell>}\r\n                {headCells.map((headCell) => (\r\n                    <TableCell\r\n                        key={headCell.id}\r\n                        align={'justify'}\r\n                        padding={headCell.disablePadding ? 'none' : 'default'}\r\n                        sortDirection={orderBy === headCell.id ? order : false}\r\n                    >\r\n                        <TableSortLabel\r\n                            active={orderBy === headCell.id}\r\n                            direction={orderBy === headCell.id ? order : 'asc'}\r\n                            onClick={createSortHandler(headCell.id)}\r\n                        >\r\n                            {headCell.label}\r\n                            {orderBy === headCell.id ? (\r\n                                <span className={classes.visuallyHidden}>\r\n                                    {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                                </span>\r\n                            ) : null}\r\n                        </TableSortLabel>\r\n                    </TableCell>\r\n                ))}\r\n                {totalCell &&                \r\n                <TableCell\r\n                    key={'total'}\r\n                    align={'right'}\r\n                    padding={'default'}\r\n                    sortDirection={order}\r\n                >\r\n                    <TableSortLabel\r\n                        active={orderBy === 'total'}\r\n                        direction={orderBy === 'total' ? order : 'asc'}\r\n                        onClick={createSortHandler('total')}\r\n                    >\r\n                        {totalCell}\r\n                        {orderBy === 'total' ? (\r\n                            <span className={classes.visuallyHidden}>\r\n                                {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                            </span>\r\n                        ) : null}\r\n                    </TableSortLabel>\r\n                </TableCell>\r\n                }\r\n            </TableRow>\r\n        </TableHead>\r\n    );\r\n};\r\n\r\nexport default TableSortedHeader;\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        visuallyHidden: {\r\n            border: 0,\r\n            clip: 'rect(0 0 0 0)',\r\n            height: 1,\r\n            margin: -1,\r\n            overflow: 'hidden',\r\n            padding: 0,\r\n            position: 'absolute',\r\n            top: 20,\r\n            width: 1,\r\n        },\r\n        buttonContainer: {\r\n            paddingLeft: '26px',\r\n            paddingRight: '1px',\r\n            width: '140px'\r\n        },\r\n        deleteCell: {\r\n            width: 30,\r\n        }\r\n    }),\r\n);","import { CarData, OptionType } from \"../../types\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\r\n\r\nexport const getYearOptions = (): OptionType[] => {\r\n    const yearsList: number[] = [];\r\n    const year = new Date().getFullYear();\r\n    for (let i = 1900; i <= year; i++) {\r\n        yearsList.push(i);\r\n    }\r\n    yearsList.reverse();\r\n    return yearsList.map(y => ({ value: y, label: y }))\r\n};\r\n\r\nexport const getFormattedDate = (date: Date): string => {\r\n    let year = date.getFullYear();\r\n    let month = (1 + date.getMonth()).toString().padStart(2, '0');\r\n    let day = date.getDate().toString().padStart(2, '0');\r\n  \r\n    return month + '/' + day + '/' + year;\r\n}\r\n\r\nexport const generateMockExpenses = (car: CarData): CarData => {\r\n        const now = new Date()\r\n        const lastYear = new Date(now.getFullYear() - 1, now.getMonth(), now.getDay())\r\n        const randomDate = (start: any, end: any): Date => {\r\n            var date = new Date(+start + Math.random() * (end - start));\r\n            return date;\r\n        };\r\n        const randomExpense = () => {\r\n            return {\r\n                id: uuidv4(),\r\n                cost: Number((Math.random() * 50).toFixed(2)),\r\n                date: randomDate(lastYear, now),\r\n                mileage: car.mileage + Number((Math.random() * 1000).toFixed(2)),\r\n            }\r\n        }\r\n        const randomFuelExpense = () => {\r\n            return {\r\n                id: uuidv4(),\r\n                date: randomDate(lastYear, now),\r\n                costPerUnit: Number((Math.random() * 2).toFixed(2)),\r\n                quantity: Number((Math.random() * 80 + 20).toFixed(0)),\r\n                mileage: car.mileage + Number((Math.random() * 1000).toFixed(2)),\r\n            }\r\n        }\r\n\r\n        const carCopy = { ...car };\r\n        for (let index = 0; index < 12; index++) {\r\n            carCopy.expenses.serviceExpenses.push(randomExpense());\r\n            carCopy.expenses.maintenanceExpenses.push(randomExpense());\r\n            carCopy.expenses.roadTaxExpenses.push(randomExpense());\r\n            carCopy.expenses.fuelExpenses.push(randomFuelExpense());\r\n        }\r\n        return carCopy;\r\n};\r\n\r\nexport function Alert(props: AlertProps) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}","import { Accordion, AccordionDetails, AccordionSummary, Button, createStyles, FormControl, FormControlLabel, FormGroup, Grid, InputAdornment, InputLabel, makeStyles, OutlinedInput, Paper, Radio, RadioGroup, Table, TableBody, TableCell, TableContainer, TableRow } from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nimport useStyles from '../../styles/styles';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { CarData, FUELTYPE, IFuelExpense, IMaintenanceExpense, IRoadTaxExpense, IRootState, IServiceExpense, Order } from '../../types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { updateExpenseFilters, updateMyCar } from '../../store/actions/actions';\r\nimport MainContainer from '../shared/MainContainer';\r\nimport TableSortedHeader from '../shared/TableSortedHeader';\r\nimport { get, sortBy, lowerCase } from 'lodash';\r\nimport { getFormattedDate } from '../shared/helpers';\r\nimport DeleteForeverOutlinedIcon from '@material-ui/icons/DeleteForeverOutlined';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst Expenses: React.FC<{}> = () => {\r\n    const globalClasses = useStyles();\r\n    const selectMyCar = (state: IRootState) => state.app.appState.myCar;\r\n    const myCar = useSelector(selectMyCar);\r\n\r\n    const selectFilter = (state: IRootState) => state.app.appState.expensesFilter;\r\n    const filter = useSelector(selectFilter);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        dispatch(updateExpenseFilters((event.target as HTMLInputElement).value));\r\n    };\r\n\r\n    const onDelete = (id: string) => {\r\n        if (myCar) {            \r\n            if (filter === 'service') {\r\n                dispatch(updateMyCar({ ...myCar, expenses: { ...myCar.expenses, serviceExpenses: [...myCar.expenses.serviceExpenses].filter(f => f.id !== id) } }));\r\n            } else if (filter === 'maintenance') {\r\n                dispatch(updateMyCar({ ...myCar, expenses: { ...myCar.expenses, maintenanceExpenses: [...myCar.expenses.maintenanceExpenses].filter(f => f.id !== id) } }));\r\n            } else if (filter === 'roadTax') {\r\n                dispatch(updateMyCar({ ...myCar, expenses: { ...myCar.expenses, roadTaxExpenses: [...myCar.expenses.roadTaxExpenses].filter(f => f.id !== id) } }));\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    const onSave = (expense: IServiceExpense | IMaintenanceExpense | IRoadTaxExpense): void => {\r\n        if (myCar) {\r\n            const myCarCopy = { ...myCar };\r\n            if (filter === 'service') {\r\n                myCarCopy.expenses.serviceExpenses.push(expense)\r\n            }\r\n            if (filter === 'maintenance') {\r\n                myCarCopy.expenses.maintenanceExpenses.push(expense)\r\n            }\r\n            if (filter === 'roadTax') {\r\n                myCarCopy.expenses.roadTaxExpenses.push(expense)\r\n            }\r\n            dispatch(updateMyCar(myCarCopy));\r\n        }\r\n    };\r\n\r\n    const SidePanel = (\r\n        <div >\r\n            <Accordion expanded>\r\n                <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls=\"panel1a-content\"\r\n                    id=\"panel1a-header\"\r\n                >\r\n                    Expenses\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                    <FormControl component=\"fieldset\" className={globalClasses.checkboxContainer}>\r\n                        <FormGroup>\r\n                            <RadioGroup aria-label=\"expenses\" name=\"gender1\" value={filter} onChange={handleChange}>\r\n                                <FormControlLabel value=\"fuel\" control={<Radio color=\"default\" size='small' />} label=\"Fuel\" />\r\n                                <FormControlLabel value=\"service\" control={<Radio color=\"default\" size='small' />} label=\"Service\" />\r\n                                <FormControlLabel value=\"maintenance\" control={<Radio color=\"default\" size='small' />} label=\"Maintenance\" />\r\n                                <FormControlLabel value=\"roadTax\" control={<Radio color=\"default\" size='small' />} label=\"Road Tax\" />\r\n                            </RadioGroup>\r\n                        </FormGroup>\r\n                    </FormControl>\r\n                </AccordionDetails>\r\n            </Accordion>\r\n        </div>\r\n    );\r\n\r\n    const renderMainPanel: JSX.Element = filter === 'fuel' ? <FuelExpensesPanel /> :\r\n        <ServiceAndMaintenanceExpensesPanel\r\n            onSave={onSave}\r\n            onDelete={onDelete}\r\n            myCar={myCar}\r\n            expenseFilter={filter} />;\r\n\r\n    return (\r\n        <MainContainer\r\n            sideComponent={SidePanel}\r\n            mainComponent={renderMainPanel} />\r\n    )\r\n};\r\n\r\nexport default Expenses;\r\n\r\ninterface ServiceAndMaintenanceExpensesProps {\r\n    onSave: (expense: IServiceExpense | IMaintenanceExpense) => void;\r\n    onDelete: (id: string) => void;\r\n    myCar?: CarData;\r\n    expenseFilter: string;\r\n}\r\n\r\nconst ServiceAndMaintenanceExpensesPanel: React.FC<ServiceAndMaintenanceExpensesProps> = (props) => {\r\n    const { onDelete, onSave, myCar, expenseFilter } = props;\r\n\r\n    const localClasses = useLocalStyles();\r\n    const globalClasses = useStyles();\r\n    let expenses: Array<IServiceExpense | IMaintenanceExpense> | undefined = myCar?.expenses?.serviceExpenses;\r\n    if (expenseFilter === 'maintenance') expenses = myCar?.expenses?.maintenanceExpenses\r\n    if (expenseFilter === 'roadTax') expenses = myCar?.expenses?.roadTaxExpenses\r\n\r\n    const [mileage, setMileage] = useState<number>(myCar?.mileage ?? 0);\r\n    const [cost, setCost] = useState<number>();\r\n    const [order, setOrder] = useState<Order>('asc');\r\n    const [orderBy, setOrderBy] = useState<string>('date');\r\n\r\n    const sortedList = orderSerManinExpBy(expenses, order, orderBy);\r\n\r\n    const handleRequestSort = (event: React.MouseEvent<unknown>, property: string) => {\r\n        const isAsc = orderBy === property && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(property);\r\n    };\r\n\r\n    const handleMileageChange = () => (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        if (Number(event.target.value) === 0) setMileage(Number(event.target.value));\r\n        if (Number(event.target.value) > 0) setMileage(Number(event.target.value));\r\n    };\r\n\r\n    const handleCostChange = () => (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        if (Number(event.target.value) > 0) setCost(Number(event.target.value));\r\n        if (Number(event.target.value) === 0) setCost(undefined);\r\n    };\r\n\r\n    const handleSave = () => {\r\n        onSave({\r\n            id: uuidv4(),\r\n            cost: cost ?? 0,\r\n            date: new Date(),\r\n            mileage: mileage ?? 0,\r\n        });\r\n    };\r\n\r\n    const headCells = [\r\n        { id: 'date', numeric: false, disablePadding: false, label: 'Data' },\r\n        { id: 'mileage', numeric: false, disablePadding: false, label: 'Mileage' },\r\n        { id: 'cost', numeric: false, disablePadding: false, label: `Cost` },\r\n    ];\r\n\r\n    const expensesTotal = (expenses: Array<IServiceExpense | IMaintenanceExpense> | undefined): string => {\r\n        let total = 0;\r\n        if (expenses) expenses.forEach(exp => total += exp.cost);\r\n        return `£${total.toFixed(2)}`;\r\n    }\r\n\r\n    return (\r\n\r\n        <div>\r\n            <Grid container spacing={1} className={localClasses.mainContainer}>\r\n                <Grid item xs={12} className={localClasses.selectContainer}>\r\n                    <Grid container spacing={1}>\r\n                        <Grid item xs={3}>\r\n                            <FormControl className={globalClasses.margin} variant=\"outlined\" >\r\n                                <InputLabel htmlFor=\"outlined-adornment-mileage\">Mileage</InputLabel>\r\n                                <OutlinedInput\r\n                                    id=\"outlined-adornment-Mileage\"\r\n                                    type={'number'}\r\n                                    value={mileage}\r\n                                    required\r\n                                    endAdornment={<InputAdornment position=\"end\">{mileage > 0 ? ' miles' : ''}</InputAdornment>}\r\n                                    onChange={handleMileageChange()}\r\n                                    labelWidth={70}\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                            <FormControl className={globalClasses.margin} variant=\"outlined\" >\r\n                                <InputLabel htmlFor=\"outlined-adornment-cost\">Cost</InputLabel>\r\n                                <OutlinedInput\r\n                                    id=\"outlined-adornment-cost\"\r\n                                    type={'number'}\r\n                                    value={cost}\r\n                                    required\r\n                                    startAdornment={<InputAdornment position=\"start\">£</InputAdornment>}\r\n                                    onChange={handleCostChange()}\r\n                                    labelWidth={60}\r\n                                    error={cost !== undefined && cost < 0}\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={1} className={localClasses.buttonContainer}>\r\n                            <Button autoFocus color=\"inherit\" onClick={handleSave} disabled={cost === undefined || cost === 0}>\r\n                                Add\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12} className={localClasses.tableContainer}>\r\n                    <TableContainer component={Paper}>\r\n                        <Table aria-label=\"table\">\r\n                            <TableSortedHeader order={order} orderBy={orderBy} onRequestSort={handleRequestSort} headCells={headCells} deleteRowCell />\r\n                            <TableBody>\r\n                                {sortedList?.length ? sortedList.map((item: IServiceExpense | IMaintenanceExpense, index: number) => (\r\n                                    <TableRow key={`tablelisting-${index}`}>\r\n                                        <TableCell align=\"left\" className={localClasses.deleteCell}>\r\n                                            <Button onClick={() => onDelete(item.id)}><DeleteForeverOutlinedIcon color='action' fontSize='small' />\r\n                                            </Button>\r\n                                        </TableCell>\r\n                                        <TableCell align=\"left\" >{getFormattedDate(get(item, 'date', ''))}</TableCell>\r\n                                        <TableCell align=\"justify\">{item.mileage.toFixed(0)}</TableCell>\r\n                                        <TableCell align=\"justify\">{`£${item.cost}`}</TableCell>\r\n                                    </TableRow>\r\n                                )) : null}\r\n                                {sortedList?.length ? <TableRow>\r\n                                    <TableCell colSpan={2} />\r\n                                    <TableCell >Total</TableCell>\r\n                                    <TableCell align=\"left\">{expensesTotal(sortedList)}</TableCell>\r\n                                </TableRow> : null}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst FuelExpensesPanel: React.FC = () => {\r\n    const localClasses = useLocalStyles();\r\n    const globalClasses = useStyles();\r\n    const dispatch = useDispatch();\r\n\r\n    const selectMyCar = (state: IRootState) => state.app.appState.myCar;\r\n    const myCar = useSelector(selectMyCar);\r\n\r\n    const [mileage, setMileage] = useState<number>(myCar?.mileage ?? 0);\r\n    const [costPerUnit, setCostPerUnit] = useState<number>();\r\n    const [quantity, setQuantity] = useState<number>();\r\n    const [order, setOrder] = useState<Order>('asc');\r\n    const [orderBy, setOrderBy] = useState<string>('date');\r\n\r\n    const sortedList = orderFuelExpBy(myCar?.expenses?.fuelExpenses, order, orderBy);\r\n\r\n    const handleRequestSort = (event: React.MouseEvent<unknown>, property: string) => {\r\n        const isAsc = orderBy === property && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(property);\r\n    };\r\n\r\n    const handleMileageChange = () => (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        if (Number(event.target.value) === 0) setMileage(Number(event.target.value));\r\n        if (Number(event.target.value) > 0) setMileage(Number(event.target.value));\r\n    };\r\n\r\n    const handleCostPerUnitChange = () => (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        if (Number(event.target.value) > 0) setCostPerUnit(Number(event.target.value));\r\n        if (Number(event.target.value) === 0) setCostPerUnit(undefined);\r\n    };\r\n    const handleQuantityChange = () => (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        if (Number(event.target.value) === 0) setQuantity(undefined);\r\n        if (Number(event.target.value) > 0) setQuantity(Number(event.target.value));\r\n    };\r\n\r\n    const handleSave = () => {\r\n        if (myCar?.expenses) {\r\n            const myCarCopy = { ...myCar };\r\n            myCarCopy.expenses.fuelExpenses.push(\r\n                {\r\n                    id: uuidv4(),\r\n                    costPerUnit: costPerUnit ?? 0,\r\n                    date: new Date(),\r\n                    quantity: quantity ?? 0,\r\n                    mileage: mileage ?? 0,\r\n                }\r\n            )\r\n\r\n            dispatch(updateMyCar(myCarCopy));\r\n        }\r\n    };\r\n\r\n    const onDelete = (id: string) => {\r\n        if (myCar) {\r\n            dispatch(updateMyCar({ ...myCar, expenses: { ...myCar.expenses, fuelExpenses: [...myCar.expenses.fuelExpenses].filter(f => f.id !== id) } }));\r\n        }\r\n    }\r\n\r\n    const fuelExpensesTotal = (expenses: Array<IFuelExpense> | undefined): string => {\r\n        let total = 0;\r\n        if (expenses) expenses.forEach(exp => total += exp.costPerUnit * exp.quantity);\r\n        return total.toFixed(2);\r\n    }\r\n\r\n    const headCells = [\r\n        { id: 'date', numeric: false, disablePadding: false, label: 'Data' },\r\n        { id: 'mileage', numeric: true, disablePadding: true, label: 'Mileage' },\r\n        { id: 'costPerUnit', numeric: true, disablePadding: true, label: `Cost Per Unit` },\r\n        { id: 'quantity', numeric: true, disablePadding: true, label: `Quantity${myCar?.fuelType === FUELTYPE.ELECTRIC ? ' (kWh)' : ' (l)'}` },\r\n    ];\r\n\r\n    return (\r\n\r\n        <div>\r\n            <Grid container spacing={1} className={localClasses.mainContainer}>\r\n                <Grid item xs={12} className={localClasses.selectContainer}>\r\n                    <Grid container spacing={1}>\r\n                        <Grid item xs={3}>\r\n                            <FormControl className={globalClasses.margin} variant=\"outlined\" >\r\n                                <InputLabel htmlFor=\"outlined-adornment-mileage\">Mileage</InputLabel>\r\n                                <OutlinedInput\r\n                                    id=\"outlined-adornment-Mileage\"\r\n                                    type={'number'}\r\n                                    value={mileage}\r\n                                    required\r\n                                    endAdornment={<InputAdornment position=\"end\">{mileage > 0 ? ' miles' : ''}</InputAdornment>}\r\n                                    onChange={handleMileageChange()}\r\n                                    labelWidth={70}\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                            <FormControl className={globalClasses.margin} variant=\"outlined\" >\r\n                                <InputLabel htmlFor=\"outlined-adornment-cost\">Cost Per Unit</InputLabel>\r\n                                <OutlinedInput\r\n                                    id=\"outlined-adornment-cost\"\r\n                                    type={'number'}\r\n                                    value={costPerUnit}\r\n                                    required\r\n                                    startAdornment={<InputAdornment position=\"start\">£</InputAdornment>}\r\n                                    onChange={handleCostPerUnitChange()}\r\n                                    labelWidth={110}\r\n                                    error={costPerUnit !== undefined && costPerUnit < 0}\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={3}>\r\n                            <FormControl className={globalClasses.margin} variant=\"outlined\" >\r\n                                <InputLabel htmlFor=\"outlined-adornment-qty\">Quantity</InputLabel>\r\n                                <OutlinedInput\r\n                                    id=\"outlined-adornment-qty\"\r\n                                    type={'number'}\r\n                                    value={quantity}\r\n                                    endAdornment={<InputAdornment position=\"end\">{myCar?.fuelType === FUELTYPE.ELECTRIC ? ' kWh' : ' l'}</InputAdornment>}\r\n                                    required\r\n                                    onChange={handleQuantityChange()}\r\n                                    labelWidth={80}\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={1} >\r\n                            <Button className={localClasses.buttonContainer} autoFocus color=\"inherit\" onClick={handleSave} disabled={costPerUnit === undefined || costPerUnit === 0 || quantity === undefined || quantity === 0}>\r\n                                Add\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12} className={localClasses.tableContainer}>\r\n                    <TableContainer component={Paper}>\r\n                        <Table aria-label=\"table\">\r\n                            <TableSortedHeader order={order} orderBy={orderBy} onRequestSort={handleRequestSort} headCells={headCells} deleteRowCell totalCell='Cost' />\r\n                            <TableBody>\r\n                                {sortedList?.length ? sortedList.map((item: IFuelExpense, index: number) => (\r\n                                    <TableRow key={`tablelisting-${index}`}>\r\n                                        <TableCell align=\"left\" className={localClasses.deleteCell}>\r\n                                            <Button onClick={() => onDelete(item.id)}><DeleteForeverOutlinedIcon color='action' fontSize='small' />\r\n                                            </Button>\r\n                                        </TableCell>\r\n                                        <TableCell align=\"left\" >{getFormattedDate(get(item, 'date', ''))}</TableCell>\r\n                                        <TableCell align=\"justify\">{get(item, 'mileage', 0).toFixed(0)}</TableCell>\r\n                                        <TableCell align=\"justify\">{`£${(get(item, 'costPerUnit', 0))}`}</TableCell>\r\n                                        <TableCell align=\"justify\">{get(item, 'quantity', 0)}</TableCell>\r\n                                        <TableCell align=\"right\">{`£${(get(item, 'costPerUnit', 0) * (get(item, 'quantity', 0))).toFixed(2)}`\r\n                                        }\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                )) : null}\r\n                                {sortedList?.length ? <TableRow>\r\n                                    <TableCell colSpan={4} />\r\n                                    <TableCell colSpan={1}>Total</TableCell>\r\n                                    <TableCell align=\"right\">{`£${fuelExpensesTotal(sortedList)}`}</TableCell>\r\n                                </TableRow> : null}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst orderSerManinExpBy = (items: Array<IServiceExpense | IMaintenanceExpense> | undefined, order: Order, orderBy: string) => {\r\n    if (items?.length) {\r\n        const sortedList = sortBy(items, (item: IServiceExpense | IMaintenanceExpense) => {\r\n            return typeof get(item, orderBy) === 'string' ? lowerCase(get(item, orderBy)) : get(item, orderBy);\r\n        });\r\n        return order === 'asc' ? sortedList : sortedList.reverse();\r\n    }\r\n    return items;\r\n};\r\n\r\nconst orderFuelExpBy = (items: Array<IFuelExpense> | undefined, order: Order, orderBy: string): IFuelExpense[] | undefined => {\r\n    if (items?.length) {\r\n        const sortedList = sortBy(items, (item: IFuelExpense) => {\r\n\r\n            if (orderBy === 'total') {\r\n\r\n                return (item.costPerUnit * item.quantity).toFixed(2);\r\n            }\r\n            return typeof get(item, orderBy) === 'string' ? lowerCase(get(item, orderBy)) : get(item, orderBy);\r\n        });\r\n\r\n\r\n        return order === 'asc' ? sortedList : sortedList.reverse();\r\n    }\r\n    return items;\r\n};\r\n\r\nconst useLocalStyles = makeStyles(() =>\r\n    createStyles({\r\n        mainContainer: {\r\n            display: 'grid',\r\n\r\n        },\r\n        selectContainer: {\r\n            margin: 10,\r\n        },\r\n        buttonContainer: {\r\n            flex: 1,\r\n            alignContent: 'center',\r\n            justifyContent: 'right'\r\n        },\r\n        deleteCell: {\r\n            width: 30,\r\n        },\r\n        tableContainer: {\r\n            marginRight: 15\r\n        }\r\n    }),\r\n);\r\n","import { AppBar, Button, createStyles, Dialog, Grid, IconButton, makeStyles, Slide, Theme, Toolbar, Typography } from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { TransitionProps } from '@material-ui/core/transitions/transition';\r\nimport Select from 'react-select';\r\nimport React, { useMemo, useState } from 'react';\r\nimport _ from 'lodash';\r\nimport { selectDropdownStyle } from '../../styles/styles';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { Car, CarData, FUELTYPE, OptionType } from '../../types';\r\nimport { updateCars } from '../../store/actions/actions';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport carsData from '../../cars.json';\r\nimport { generateMockExpenses } from '../shared/helpers';\r\n\r\ninterface AddCarProps {\r\n    open: boolean;\r\n    setOpen: React.Dispatch<React.SetStateAction<boolean>>;\r\n    carsToCompareState?: CarData[];\r\n    setOpenSuccessSnackbar: React.Dispatch<React.SetStateAction<boolean>>;\r\n\r\n}\r\n\r\nconst AddCar: React.FC<AddCarProps> = props => {\r\n    const classes = useStyles();\r\n    const { open, setOpen, carsToCompareState, setOpenSuccessSnackbar } = props;\r\n    const dispatch = useDispatch();\r\n    const [make, setMake] = useState<string>('');\r\n    const [model, setModel] = useState<string>('');\r\n    const [year, setYear] = useState<number>(0);\r\n    const [fuelType, setFuelType] = useState<FUELTYPE>();\r\n\r\n    const makes: OptionType[] = useMemo(() => {\r\n        const cars: Car[] = _.uniqBy(carsData, \"make\");\r\n        return cars.map(c => ({ value: c.make, label: c.make }))\r\n    }, []);\r\n\r\n    const years: OptionType[] = useMemo(() => {\r\n        const carsByYear = carsData.filter(cd => cd.make === make);\r\n\r\n        return _.uniqBy(carsByYear, \"year\").map((c: any) => ({ value: c.year, label: c.year })).reverse()\r\n    }, [make]);\r\n\r\n    const models: OptionType[] = useMemo(() => {\r\n        const carsByMake = carsData.filter(cd => cd.make === make && cd.year === year);\r\n\r\n        return carsByMake.map(c => ({ value: c.model, label: c.model }))\r\n    }, [year, make]);\r\n\r\n    const fuelTypes: OptionType[] = useMemo(() => {\r\n        return [{ value: FUELTYPE.DIESEL, label: FUELTYPE.DIESEL }, { value: FUELTYPE.PETROL, label: FUELTYPE.PETROL }, { value: FUELTYPE.ELECTRIC, label: FUELTYPE.ELECTRIC }, { value: FUELTYPE.HYBRID, label: FUELTYPE.HYBRID }]\r\n    }, [])\r\n\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleAdd = () => {\r\n        const cars = carsToCompareState ? [...carsToCompareState] : [];\r\n        const car: CarData = {\r\n            id: uuidv4(),\r\n            car: {\r\n                make: make,\r\n                model: model,\r\n                year: year\r\n            },\r\n            fuelType: fuelType ?? FUELTYPE.DIESEL,\r\n            mileage: Math.floor(Math.random() * 100000),\r\n            mileageTolerance: 0,\r\n            milesTolerance: 0,\r\n            yearTolerance: 0,\r\n            expenses: {\r\n                fuelExpenses: [],\r\n                serviceExpenses: [],\r\n                maintenanceExpenses: [],\r\n                roadTaxExpenses: [],\r\n            },\r\n        };\r\n        const carWithMockExpenses = generateMockExpenses(car);\r\n        cars.push(carWithMockExpenses)\r\n        dispatch(updateCars(cars));\r\n        setOpen(false);\r\n        setOpenSuccessSnackbar(true);\r\n    };\r\n\r\n    const handleChange = (data: any, setOption: (value: any) => void) => {\r\n        if (data) setOption(data.value);\r\n    }\r\n\r\n    const selectedMake = makes.find(m => m.value === make);\r\n\r\n    const selectedModel = models.find(m => m.value === model);\r\n\r\n    const selectedYear = years.find(y => y.value === year);\r\n\r\n    const selectedFuelTypes = fuelTypes.find(m => m.value === fuelType);\r\n\r\n    const isValid = make !== \"\" && model !== \"\" && year !== 0 && fuelType\r\n\r\n    return (\r\n        <div>\r\n            <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\r\n                <AppBar className={classes.appBar}>\r\n                    <Toolbar className={classes.toolbar}>\r\n                        <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\r\n                            <CloseIcon />\r\n                        </IconButton>\r\n                        <Typography variant=\"h6\" className={classes.title}>\r\n                            Add Vehicle\r\n                        </Typography>\r\n                        <Button autoFocus color=\"inherit\" onClick={handleAdd} disabled={!isValid}>\r\n                            Add\r\n                        </Button>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <Grid container spacing={1} className={classes.mainContainer}>\r\n                    <Grid item xs={12} className={classes.selectContainer}>\r\n                        <Typography variant=\"h6\" >Make</Typography>\r\n                        <Select\r\n                            options={makes}\r\n                            defaultValue={selectedMake}\r\n                            value={selectedMake}\r\n                            components={{\r\n                                IndicatorSeparator: () => null,\r\n                            }}\r\n                            styles={selectDropdownStyle}\r\n                            onChange={(data: any) => {\r\n                                handleChange(data, setMake);\r\n                                setYear(0);\r\n                                setModel('');\r\n                            }}\r\n                        />\r\n                        {\r\n                            make !== \"\" &&\r\n                            <>\r\n                                <Typography variant=\"h6\" >Year</Typography>\r\n                                <Select\r\n                                    options={years}\r\n                                    defaultValue={selectedYear}\r\n                                    value={selectedYear}\r\n                                    components={{\r\n                                        IndicatorSeparator: () => null,\r\n                                    }}\r\n                                    styles={selectDropdownStyle}\r\n                                    onChange={(data: any) => {\r\n                                        handleChange(data, setYear);\r\n                                        setModel('')\r\n                                    }}\r\n                                />\r\n                            </>\r\n                        }\r\n                        {\r\n                            make !== \"\" && year !== 0 &&\r\n                            <>\r\n                                <Typography variant=\"h6\" >Model</Typography>\r\n                                <Select\r\n                                    options={models}\r\n                                    defaultValue={selectedModel}\r\n                                    value={selectedModel}\r\n                                    components={{\r\n                                        IndicatorSeparator: () => null,\r\n                                    }}\r\n                                    styles={selectDropdownStyle}\r\n                                    onChange={(data: any) => handleChange(data, setModel)}\r\n                                />\r\n                            </>\r\n                        }\r\n                        {\r\n                            make !== \"\" && year !== 0 && model !== \"\" &&\r\n                            <>\r\n                                <Typography variant=\"h6\" >Fuel Type</Typography>\r\n                                <Select\r\n                                    options={fuelTypes}\r\n                                    defaultValue={selectedFuelTypes}\r\n                                    value={selectedFuelTypes}\r\n                                    components={{\r\n                                        IndicatorSeparator: () => null,\r\n                                    }}\r\n                                    styles={selectDropdownStyle}\r\n                                    onChange={(data: any) => handleChange(data, setFuelType)}\r\n                                />\r\n                            </>\r\n                        }\r\n                    </Grid>\r\n                </Grid>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddCar;\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        appBar: {\r\n            position: 'relative',\r\n            color: \"black\",\r\n            backgroundColor: \"#ffffff\",\r\n        },\r\n        title: {\r\n            marginLeft: theme.spacing(2),\r\n            flex: 1,\r\n        },\r\n        toolbar: {\r\n            backgroundColor: \"#ffffff\",\r\n            width: \"95%\",\r\n        },\r\n        mainContainer: {\r\n            width: '33%',\r\n            backgroundColor: '#F5F5F5',\r\n            display: 'grid',\r\n            marginLeft: '33%',\r\n            marginTop: \"10%\",\r\n\r\n        },\r\n        selectContainer: {\r\n            marginLeft: '22%',\r\n            marginTop: 10,\r\n            marginBottom: 10,\r\n        }\r\n    }),\r\n);\r\n\r\nconst Transition = React.forwardRef(function Transition(\r\n    props: TransitionProps & { children?: React.ReactElement },\r\n    ref: React.Ref<unknown>,\r\n) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n","import { Accordion, AccordionDetails, AccordionSummary, Button, Checkbox, createStyles, FormControl, FormControlLabel, FormGroup, Grid, IconButton, List, ListItem, ListItemSecondaryAction, ListItemText, makeStyles, Typography, Divider, TableContainer, Paper, Table, TableBody, TableRow, TableCell, Snackbar } from '@material-ui/core';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport React, { useMemo, useState } from 'react';\r\nimport { get, sortBy, lowerCase } from 'lodash';\r\nimport useStyles, { selectDropdownDateStyle } from '../../styles/styles';\r\nimport MainContainer from '../shared/MainContainer';\r\nimport Select from 'react-select';\r\nimport AddCar from './AddCar';\r\nimport TableSortedHeader, { HeadCell } from '../shared/TableSortedHeader';\r\nimport { Bar, BarChart, CartesianGrid, Legend, ResponsiveContainer, Tooltip, XAxis, YAxis } from 'recharts';\r\nimport { Order, Months, CarData, OptionType, IRootState, CarChartData } from '../../types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { updateCars, updateFilters } from '../../store/actions/actions';\r\nimport { Alert, getYearOptions } from '../shared/helpers';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst Cars: React.FC<{}> = () => {\r\n    const globalClasses = useStyles();\r\n    const localClasses = useLocalStyles();\r\n    const dispatch = useDispatch();\r\n    const [openAddCarDialog, setOpenAddCarDialog] = React.useState<boolean>(false);\r\n\r\n    const selectFilter = (state: IRootState) => state.app.appState.filters;\r\n    const filters = useSelector(selectFilter);\r\n\r\n    const selectCarsFilter = (state: IRootState) => state.app.appState.carsToCompareState;\r\n    const carsToCompareState = useSelector(selectCarsFilter);\r\n\r\n    const selectMyCar = (state: IRootState) => state.app.appState.myCar;\r\n    const myCar = useSelector(selectMyCar);\r\n\r\n    const [openSuccessSnackbar, setOpenSuccessSnackbar] = useState<boolean>(false);\r\n\r\n    const [order, setOrder] = useState<Order>('asc');\r\n    const [orderBy, setOrderBy] = useState<string>('name');\r\n    const [toMonth, setToMonth] = useState<string>(Months[new Date().getMonth()]);\r\n    const [toYear, setToYear] = useState<number>(new Date().getFullYear());\r\n    const [fromMonth, setFromMonth] = useState<string>(Months[new Date().getMonth()]);\r\n    const [fromYear, setFromYear] = useState<number>(new Date().getFullYear() - 1);\r\n\r\n    const { fuel, maintenance, service, tax } = filters;\r\n\r\n    const from = fromYear && fromMonth ? new Date(fromYear, Months.indexOf(fromMonth)) : new Date();\r\n    const to = toYear && toMonth ? new Date(toYear, Months.indexOf(toMonth)) : new Date();\r\n    const period: number = monthDiff(fromYear, toYear, fromMonth, toMonth);\r\n\r\n    const sortedList = myCar && carsToCompareState ? orderArrayBy([myCar, ...carsToCompareState], order, orderBy, filters, period) : [];\r\n\r\n    const handleRequestSort = (event: React.MouseEvent<unknown>, property: string) => {\r\n        const isAsc = orderBy === property && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(property);\r\n    };\r\n\r\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        dispatch(updateFilters({ ...filters, [event.target.name]: event.target.checked }));\r\n    };\r\n\r\n    const removeVehicle = (id: string) => {\r\n        if (carsToCompareState) {\r\n            const newCars = carsToCompareState.filter(c => c.id !== id);\r\n            dispatch(updateCars(newCars));\r\n            setOpenSuccessSnackbar(true);\r\n        }\r\n    }\r\n\r\n    const years: OptionType[] = useMemo(() => {\r\n        return getYearOptions();\r\n    }, []);\r\n\r\n    const months: OptionType[] = useMemo(() => {\r\n\r\n        return Months.map(m => ({ value: m, label: m }))\r\n    }, []);\r\n\r\n    const selectedMonthFrom = months.find(m => m.value === fromMonth);\r\n\r\n    const selectedMonthTo = months.find(m => m.value === toMonth);\r\n\r\n    const selectedYearTo = years.find(y => y.value === toYear);\r\n\r\n    const selectedYearFrom = years.find(y => y.value === fromYear);\r\n\r\n    const SidePanel = (\r\n        <div className={localClasses.sideComponent}>\r\n            <Accordion>\r\n                <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls=\"panel1a-content\"\r\n                    id=\"panel1a-header\"\r\n                >\r\n                    Cars\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                    <Grid container spacing={1} >\r\n                        <Grid item xs={12}><Typography className={globalClasses.accordionHeading} >From</Typography></Grid>\r\n                        <Grid item xs={6}>\r\n                            <Select\r\n                                options={months}\r\n                                defaultValue={selectedMonthFrom}\r\n                                value={selectedMonthFrom}\r\n                                components={{\r\n                                    IndicatorSeparator: () => null,\r\n                                }}\r\n                                styles={selectDropdownDateStyle}\r\n                                onChange={(data: any) => setFromMonth(data.value)}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <Select\r\n                                options={years}\r\n                                defaultValue={selectedYearFrom}\r\n                                value={selectedYearFrom}\r\n                                components={{\r\n                                    IndicatorSeparator: () => null,\r\n                                }}\r\n                                styles={selectDropdownDateStyle}\r\n                                onChange={(data: any) => setFromYear(data.value)}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}><Typography className={globalClasses.accordionHeading} >To</Typography></Grid>\r\n                        <Grid item xs={6}>\r\n                            <Select\r\n                                options={months}\r\n                                defaultValue={selectedMonthTo}\r\n                                value={selectedMonthTo}\r\n                                components={{\r\n                                    IndicatorSeparator: () => null,\r\n                                }}\r\n                                styles={selectDropdownDateStyle}\r\n                                onChange={(data: any) => setToMonth(data.value)}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <Select\r\n                                options={years}\r\n                                defaultValue={selectedYearTo}\r\n                                value={selectedYearTo}\r\n                                components={{\r\n                                    IndicatorSeparator: () => null,\r\n                                }}\r\n                                styles={selectDropdownDateStyle}\r\n                                onChange={(data: any) => setToYear(data.value)}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} >{' '}</Grid>\r\n                        <Grid item xs={12}>\r\n                            {\r\n                                period > 0 ?\r\n                                    <div className={localClasses.buttonContainer}>\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            autoFocus\r\n                                            color=\"inherit\"\r\n                                            size=\"small\"\r\n                                            onClick={() => setOpenAddCarDialog(true)}\r\n                                            className={globalClasses.button}\r\n                                            startIcon={<AddIcon />}\r\n                                        >\r\n                                            Add Car\r\n                                        </Button>\r\n                                    </div> : <span className={globalClasses.errorText}>Please provide a valid period</span>\r\n                            }\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <List className={localClasses.listContainer} dense>\r\n                                {\r\n                                    carsToCompareState && carsToCompareState.map((vehicle) => (\r\n                                        myCar?.id !== vehicle.id &&\r\n                                        <div key={vehicle.id}>\r\n                                            <ListItem>\r\n                                                <ListItemText\r\n                                                    primary={`${vehicle?.car?.make ?? ''} ${vehicle?.car?.model ?? ''}`}\r\n                                                    secondary={`${vehicle?.car?.year ?? ''} ${vehicle?.fuelType ?? ''}`}\r\n                                                />\r\n\r\n                                                <ListItemSecondaryAction>\r\n                                                    <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => removeVehicle(vehicle?.id)}>\r\n                                                        <CloseIcon />\r\n                                                    </IconButton>\r\n                                                </ListItemSecondaryAction>\r\n                                            </ListItem>\r\n                                            <Divider variant=\"fullWidth\" component=\"li\" />\r\n                                        </div>\r\n                                    ))\r\n                                }\r\n                            </List>\r\n                        </Grid>\r\n                    </Grid>\r\n                </AccordionDetails>\r\n                <AddCar\r\n                    open={openAddCarDialog}\r\n                    setOpen={setOpenAddCarDialog}\r\n                    carsToCompareState={carsToCompareState}\r\n                    setOpenSuccessSnackbar={setOpenSuccessSnackbar}\r\n                />\r\n            </Accordion>\r\n            <Accordion >\r\n                <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls=\"panel1a-content\"\r\n                    id=\"panel1a-header\"\r\n                >\r\n                    Expenses Filters\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                    <FormControl component=\"fieldset\" className={globalClasses.checkboxContainer}>\r\n                        <FormGroup>\r\n                            <FormControlLabel\r\n                                control={<Checkbox checked={fuel} onChange={handleChange} color=\"default\" size=\"small\" name=\"fuel\" />}\r\n                                label=\"Fuel\"\r\n                            />\r\n                            <FormControlLabel\r\n                                control={<Checkbox checked={service} onChange={handleChange} color=\"default\" size=\"small\" name=\"service\" />}\r\n                                label=\"Service\"\r\n                            />\r\n                            <FormControlLabel\r\n                                control={<Checkbox checked={maintenance} onChange={handleChange} color=\"default\" size=\"small\" name=\"maintenance\" />}\r\n                                label=\"Maintenance\"\r\n                            />\r\n                            <FormControlLabel\r\n                                control={<Checkbox checked={tax} onChange={handleChange} color=\"default\" size=\"small\" name=\"tax\" />}\r\n                                label=\"Road Tax\"\r\n                            />\r\n                        </FormGroup>\r\n                    </FormControl>\r\n                </AccordionDetails>\r\n            </Accordion>\r\n        </div>\r\n    )\r\n\r\n    const headCells = (): HeadCell[] => {\r\n        const hc = [\r\n            { id: 'car.make', numeric: false, disablePadding: false, label: 'Make' },\r\n            { id: 'car.model', numeric: true, disablePadding: true, label: 'Model' },\r\n            { id: 'fuelType', numeric: true, disablePadding: true, label: 'Fuel Type' },\r\n            { id: 'period', numeric: true, disablePadding: true, label: 'Period' },\r\n            { id: 'miles', numeric: true, disablePadding: true, label: 'Miles' },\r\n            { id: 'mileage', numeric: true, disablePadding: true, label: 'Mileage' },\r\n        ];\r\n\r\n        if (filters.fuel) hc.push({ id: 'fuelExpenses', numeric: true, disablePadding: true, label: 'Fuel' })\r\n        if (filters.service) hc.push({ id: 'serviceExpenses', numeric: true, disablePadding: true, label: 'Service' })\r\n        if (filters.maintenance) hc.push({ id: 'maintenanceExpenses', numeric: true, disablePadding: true, label: 'Maintenance' })\r\n        if (filters.tax) hc.push({ id: 'roadTaxCost', numeric: true, disablePadding: true, label: 'Road Tax' })\r\n\r\n        return hc;\r\n    };\r\n\r\n    const carData = () => {\r\n        const cars: CarChartData[] = [];\r\n        if (carsToCompareState && fromYear && fromMonth && toYear && toMonth && myCar) {\r\n            const allCarsToCompare = [myCar, ...carsToCompareState];\r\n            allCarsToCompare.forEach(c =>\r\n\r\n                cars.push(\r\n                    {\r\n                        Name: myCar?.id === c.id ? `MY CAR` : `${c.car.make} ${c.car.model}`,\r\n                        Fuel: Number(getFuelExpensesTotal(c, from, to).toFixed(2)),\r\n                        Service: Number(getServiceExpensesTotal(c, from, to).toFixed(2)),\r\n                        Maintenance: Number(getMaintenanceExpensesTotal(c, from, to).toFixed(2)),\r\n                        'Road Tax': Number(getRoadTaxExpensesTotal(c, from, to).toFixed(2))\r\n                    }));\r\n        }\r\n        return cars;\r\n    }\r\n    const MainPanel = (\r\n        <div >\r\n            {sortedList.length ?\r\n                <Grid container spacing={1} >\r\n                    <Grid item xs={12}>\r\n                        <ResponsiveContainer width='100%' height={300}>\r\n                            <BarChart\r\n                                width={100}\r\n                                height={300}\r\n                                data={carData()}\r\n                                margin={{\r\n                                    top: 20,\r\n                                    right: 30,\r\n                                    left: 20,\r\n                                    bottom: 5,\r\n                                }}\r\n\r\n                            >\r\n                                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                                <XAxis dataKey=\"Name\" />\r\n                                <YAxis tickFormatter={(value: number) => `£${value}`} />\r\n                                <Tooltip />\r\n                                <Legend />\r\n                                {filters.tax && <Bar barSize={40} dataKey=\"Road Tax\" stackId=\"a\" fill=\"#1368CE\" />}\r\n                                {filters.maintenance && <Bar barSize={40} dataKey=\"Maintenance\" stackId=\"a\" fill=\"#E23C4F\" />}\r\n                                {filters.service && <Bar barSize={40} dataKey=\"Service\" stackId=\"a\" fill=\"#8492A6\" />}\r\n                                {filters.fuel && <Bar barSize={40} dataKey=\"Fuel\" stackId=\"a\" fill=\"#80C15C\" />}\r\n                            </BarChart>\r\n                        </ResponsiveContainer>\r\n                    </Grid>\r\n                    <Grid item xs={12} >\r\n                        <TableContainer component={Paper}>\r\n                            <Table aria-label=\"table\">\r\n                                <TableSortedHeader order={order} orderBy={orderBy} onRequestSort={handleRequestSort} headCells={headCells()} totalCell='Total' />\r\n                                {\r\n                                    period > 0 ?\r\n                                        <TableBody>\r\n                                            {sortedList.map((item: CarData) => (\r\n                                                <TableRow key={`tablelisting-${item.id}`}>\r\n                                                    <TableCell align=\"left\" className={item?.id === myCar?.id ? localClasses.boldText : undefined} >{get(item, 'car.make', '')}</TableCell>\r\n                                                    <TableCell align=\"justify\" className={item?.id === myCar?.id ? localClasses.boldText : undefined}>{get(item, 'car.model')}</TableCell>\r\n                                                    <TableCell align=\"justify\" className={item?.id === myCar?.id ? localClasses.boldText : undefined}>{item.fuelType}</TableCell>\r\n                                                    <TableCell align=\"justify\" className={item?.id === myCar?.id ? localClasses.boldText : undefined}>{period} months</TableCell>\r\n                                                    <TableCell align=\"justify\" className={item?.id === myCar?.id ? localClasses.boldText : undefined}>{getMiles(item, from, to)}</TableCell>\r\n                                                    <TableCell align=\"justify\" className={item?.id === myCar?.id ? localClasses.boldText : undefined}>{item.mileage}</TableCell>\r\n                                                    {filters.fuel && <TableCell align=\"justify\" className={item?.id === myCar?.id ? localClasses.boldText : undefined}>{`£${getFuelExpensesTotal(item, from, to).toFixed(2)}`}</TableCell>}\r\n                                                    {filters.service && <TableCell align=\"justify\" className={item?.id === myCar?.id ? localClasses.boldText : undefined}>{`£${getServiceExpensesTotal(item, from, to).toFixed(2)}`}</TableCell>}\r\n                                                    {filters.maintenance && <TableCell align=\"justify\" className={item?.id === myCar?.id ? localClasses.boldText : undefined}>{`£${getMaintenanceExpensesTotal(item, from, to).toFixed(2)}`}</TableCell>}\r\n                                                    {filters.tax && <TableCell align=\"justify\" className={item?.id === myCar?.id ? localClasses.boldText : undefined}>{`£${getRoadTaxExpensesTotal(item, from, to).toFixed(2)}`}</TableCell>}\r\n                                                    <TableCell align=\"right\" className={item?.id === myCar?.id ? localClasses.boldText : undefined}>\r\n                                                        {\r\n                                                            `£${((filters.fuel ? getFuelExpensesTotal(item, from, to) : 0) +\r\n                                                             (filters.maintenance ? getMaintenanceExpensesTotal(item, from, to) : 0) +\r\n                                                             (filters.service ? getServiceExpensesTotal(item, from, to) : 0) +\r\n                                                             (filters.tax ? getRoadTaxExpensesTotal(item, from, to) : 0)).toFixed(2)}`\r\n                                                        }\r\n                                                    </TableCell>\r\n                                                </TableRow>\r\n                                            ))}\r\n                                        </TableBody> : null}\r\n                            </Table>\r\n                        </TableContainer>\r\n                    </Grid>\r\n                </Grid> : null\r\n            }\r\n            <Snackbar\r\n\r\n                autoHideDuration={2500}\r\n                anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\r\n                open={openSuccessSnackbar}\r\n                onClose={() => setOpenSuccessSnackbar(false)}\r\n                key={uuidv4()}\r\n\r\n            >\r\n                <Alert onClose={() => setOpenSuccessSnackbar(false)} severity=\"success\">\r\n                    Success!\r\n                </Alert>\r\n            </Snackbar>\r\n        </div>\r\n    )\r\n\r\n    return (\r\n        <MainContainer sideComponent={SidePanel} mainComponent={MainPanel} />\r\n    )\r\n};\r\n\r\nexport default Cars;\r\n\r\nconst useLocalStyles = makeStyles(() =>\r\n    createStyles({\r\n        buttonContainer: {\r\n            width: '100%',\r\n        },\r\n        sideComponent: {\r\n\r\n            overflow: 'auto',\r\n            maxHeight: window.innerHeight - 150,\r\n        },\r\n        listContainer: {\r\n            width: '100%',\r\n            maxWidth: 360,\r\n            position: 'relative',\r\n            overflow: 'auto',\r\n        },\r\n        boldText: {\r\n            fontWeight: 'bold',\r\n        }\r\n    }),\r\n);\r\n\r\nconst orderArrayBy = (items: Array<CarData>, order: Order, orderBy: string, expensesState: any, period: number) => {\r\n    if (items?.length) {\r\n        const sortedList = sortBy(items, (item: any) => {\r\n\r\n            if (orderBy === 'total' && period > 0) {\r\n\r\n                return ((expensesState.fuel ? item.fuelExpenses * period : 0) +\r\n                    (expensesState.maintenance ? item.maintenanceExpenses * period : 0) +\r\n                    (expensesState.service ? item.serviceExpenses * period : 0) +\r\n                    (expensesState.tax ? item.roadTaxCost * period : 0) * period).toFixed(2);\r\n            }\r\n            return typeof get(item, orderBy) === 'string' ? lowerCase(get(item, orderBy)) : get(item, orderBy);\r\n        });\r\n\r\n\r\n        return order === 'asc' ? sortedList : sortedList.reverse();\r\n    }\r\n    return items;\r\n};\r\n\r\nconst monthDiff = (fromYear: any, toYear: any, fromMonth: any, toMonth: any): number => {\r\n    if (!fromYear || !fromMonth || !toYear || !toMonth) { return 12 }\r\n\r\n    const dateFrom = new Date(fromYear, Months.indexOf(fromMonth.value), 1);\r\n    const dateTo = new Date(toYear, Months.indexOf(toMonth.value), 1);\r\n\r\n    const period = dateTo.getMonth() - dateFrom.getMonth() + (12 * (dateTo.getFullYear() - dateFrom.getFullYear()));\r\n    return period ? period : -1\r\n};\r\n\r\nconst getMiles = (car: CarData, from: Date, to: Date): string => {\r\n    const mileages: number[] = []\r\n    car.expenses.fuelExpenses.filter(fe => fe.date > from && fe.date < to).forEach(f => mileages.push(f.mileage))\r\n    car.expenses.roadTaxExpenses.filter(fe => fe.date > from && fe.date < to).forEach(f => mileages.push(f.mileage))\r\n    car.expenses.serviceExpenses.filter(fe => fe.date > from && fe.date < to).forEach(f => mileages.push(f.mileage))\r\n    car.expenses.maintenanceExpenses.filter(fe => fe.date > from && fe.date < to).forEach(f => mileages.push(f.mileage))\r\n    return (Math.max(...mileages) - Math.min(...mileages)).toFixed(0);\r\n};\r\n\r\nconst getFuelExpensesTotal = (car: CarData, from: Date, to: Date): number => {\r\n    let fuelTotal = 0;\r\n    car.expenses.fuelExpenses.filter(fe => fe.date > from && fe.date < to).forEach(f => fuelTotal += f.costPerUnit * f.quantity)\r\n    return fuelTotal;\r\n};\r\n\r\nconst getServiceExpensesTotal = (car: CarData, from: Date, to: Date): number => {\r\n    let serviceTotal = 0;\r\n    car.expenses.serviceExpenses.filter(fe => fe.date > from && fe.date < to).forEach(s => serviceTotal += s.cost)\r\n    return serviceTotal;\r\n};\r\n\r\nconst getMaintenanceExpensesTotal = (car: CarData, from: Date, to: Date): number => {\r\n    let maintenanceTotal = 0;\r\n    car.expenses.maintenanceExpenses.filter(fe => fe.date > from && fe.date < to).forEach(s => maintenanceTotal += s.cost)\r\n    return maintenanceTotal;\r\n};\r\n\r\nconst getRoadTaxExpensesTotal = (car: CarData, from: Date, to: Date): number => {\r\n    let roadTaxTotal = 0;\r\n    car.expenses.roadTaxExpenses.filter(fe => fe.date > from && fe.date < to).forEach(s => roadTaxTotal += s.cost)\r\n    return roadTaxTotal;\r\n};","import { Accordion, AccordionDetails, AccordionSummary, Button, Checkbox, createStyles, FormControl, FormControlLabel, FormGroup, Grid, InputAdornment, InputLabel, makeStyles, OutlinedInput, Snackbar, Typography } from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport MainContainer from '../shared/MainContainer';\r\nimport { Car, CarChartData, CarData, FUELTYPE, IRootState, Months, OptionType } from '../../types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport useStyles from '../../styles/styles';\r\nimport { updateMyCar, updateMyFilters } from '../../store/actions/actions';\r\nimport clsx from 'clsx';\r\nimport _ from 'lodash';\r\nimport Select from 'react-select';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { Bar, BarChart, CartesianGrid, Legend, ResponsiveContainer, Tooltip, XAxis, YAxis } from 'recharts';\r\nimport { Alert, generateMockExpenses } from '../shared/helpers';\r\n\r\nimport carsData from '../../cars.json';\r\n\r\nconst MyCar: React.FC<{}> = () => {\r\n    const globalClasses = useStyles();\r\n    const localClasses = useLocalStyles();\r\n    const dispatch = useDispatch();\r\n\r\n    const selectMyCar = (state: IRootState) => state.app.appState.myCar;\r\n    const myCar = useSelector(selectMyCar);\r\n\r\n    const [openSuccessSnackbar, setOpenSuccessSnackbar] = useState<boolean>(false);\r\n    const [make, setMake] = useState<string>('');\r\n    const [model, setModel] = useState<string>('');\r\n    const [carYear, setCarYear] = useState<number>(0);\r\n    const [mileage, setMileage] = useState<number | undefined>(myCar?.mileage);\r\n    const [fuelType, setFuelType] = useState<FUELTYPE>();\r\n    const [mileageTolerance, setMileageTolerance] = useState<number | undefined>(myCar?.mileageTolerance);\r\n    const [milesTolerance, setMilesTolerance] = useState<number | undefined>(myCar?.milesTolerance);\r\n    const [yearTolerance, setYearTolerance] = useState<number | undefined>(myCar?.yearTolerance);\r\n\r\n    const [year, setYear] = useState<number>(new Date().getFullYear());\r\n\r\n    const selectFilter = (state: IRootState) => state.app.appState.myFilters;\r\n    const filters = useSelector(selectFilter);\r\n\r\n    const myMake = myCar?.car?.make ? myCar.car.make : make;\r\n    const myModel = myCar?.car?.model ? myCar.car.model : model;\r\n    const myYear = myCar?.car?.year ? myCar.car.year : carYear;\r\n    const myFuelType = myCar?.fuelType ?? fuelType;\r\n\r\n    const { fuel, maintenance, service, tax } = filters;\r\n\r\n    const makes: OptionType[] = _.uniqBy(carsData, \"make\").map((c: Car) => ({ value: c.make, label: c.make }));\r\n\r\n    const years: OptionType[] = _.uniqBy(carsData.filter(cd => cd.make === myMake), \"year\").map((c: any) => ({ value: c.year, label: c.year })).reverse();\r\n\r\n    const models: OptionType[] = carsData.filter(cd => cd.make === myMake && cd.year === myYear).map(c => ({ value: c.model, label: c.model }));\r\n\r\n    const fuelTypes: OptionType[] = [\r\n        { value: FUELTYPE.DIESEL, label: FUELTYPE.DIESEL },\r\n        { value: FUELTYPE.PETROL, label: FUELTYPE.PETROL },\r\n        { value: FUELTYPE.ELECTRIC, label: FUELTYPE.ELECTRIC },\r\n        { value: FUELTYPE.HYBRID, label: FUELTYPE.HYBRID }];\r\n\r\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        dispatch(updateMyFilters({ ...filters, [event.target.name]: event.target.checked }));\r\n    };\r\n\r\n    const handleMileageChange = () => (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        if (event.target.value === '') setMileage(undefined);\r\n        if (Number(event.target.value) > 0) setMileage(Number(event.target.value));\r\n    };\r\n\r\n    const handleMileageToleranceChange = () => (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        if (event.target.value === '') setMileageTolerance(undefined);\r\n        if (Number(event.target.value) > 0) setMileageTolerance(Number(event.target.value));\r\n    };\r\n\r\n    const handleMilesToleranceChange = () => (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        if (event.target.value === '') setMilesTolerance(undefined);\r\n        if (Number(event.target.value) > 0) setMilesTolerance(Number(event.target.value));\r\n    };\r\n\r\n    const handleYearToleranceChange = () => (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        if (event.target.value === '') setYearTolerance(undefined);\r\n        if (Number(event.target.value) > 0) setYearTolerance(Number(event.target.value));\r\n    };\r\n\r\n    const handleMakeChange = (data: { label: string, value: string }) => {\r\n        if (myCar) setMake(data.value);\r\n    };\r\n    const handleYearChange = (data: { label: number, value: number }) => {\r\n        if (myCar) setCarYear(data.value);\r\n    }\r\n\r\n    const handleModelChange = (data: { label: string, value: string }) => {\r\n        if (myCar) setModel(data.value);\r\n    };\r\n    const handleFuelChange = (data: { label: FUELTYPE, value: FUELTYPE }) => {\r\n        if (myCar) setFuelType(data.value);\r\n    };\r\n\r\n    const selectedYear = years.find(y => y.value === myYear);\r\n    const selectedMake = makes.find(m => m.value === myMake);\r\n\r\n    const selectedModel = models.find(m => m.value === myModel);\r\n\r\n    const selectedFuelTypes = fuelTypes.find(m => m.value === myFuelType);\r\n\r\n    const isValid = myMake !== \"\" && myModel !== \"\" && myYear !== 0 && myFuelType !== undefined\r\n\r\n    const handleSave = () => {\r\n        if (isValid) {\r\n            let mc: CarData;\r\n            if (!myCar?.car) {\r\n\r\n                mc = {\r\n                    id: uuidv4(),\r\n                    car: {\r\n                        make: myMake,\r\n                        model: myModel,\r\n                        year: myYear\r\n                    },\r\n                    fuelType: myFuelType ?? FUELTYPE.DIESEL,\r\n                    mileage: mileage ? mileage : myCar?.mileage ?? 0,\r\n                    mileageTolerance: mileageTolerance ?? 0,\r\n                    yearTolerance: yearTolerance ?? 0,\r\n                    milesTolerance: milesTolerance ?? 0,\r\n                    expenses: {\r\n                        fuelExpenses: [],\r\n                        serviceExpenses: [],\r\n                        maintenanceExpenses: [],\r\n                        roadTaxExpenses: [],\r\n                    },\r\n\r\n                }\r\n\r\n            } else {\r\n                mc = { ...myCar };\r\n                mc.car.make = myMake;\r\n                mc.car.model = myModel;\r\n                mc.car.year = myYear;\r\n                mc.mileage = mileage ? mileage : myCar?.mileage ?? 0;\r\n                mc.fuelType = myFuelType ?? FUELTYPE.DIESEL;\r\n                mc.mileageTolerance = mileageTolerance ?? 0;\r\n                mc.yearTolerance = yearTolerance ?? 0;\r\n                mc.milesTolerance = milesTolerance ?? 0;\r\n            }\r\n            const carWithMockExpenses = generateMockExpenses(mc);\r\n            dispatch(updateMyCar(carWithMockExpenses));\r\n            setOpenSuccessSnackbar(true);\r\n        }\r\n    };\r\n\r\n    const filterYears = (): OptionType[] => {\r\n        const options: OptionType[] = []\r\n        if (myCar?.expenses) {\r\n            const years = [\r\n                ...myCar.expenses.fuelExpenses.map(f => f.date.getFullYear()),\r\n                ...myCar.expenses.maintenanceExpenses.map(m => m.date.getFullYear()),\r\n                ...myCar.expenses.roadTaxExpenses.map(r => r.date.getFullYear()),\r\n                ...myCar.expenses.serviceExpenses.map(s => s.date.getFullYear()),\r\n            ]\r\n            _.uniqBy(years).forEach((y: string) => options.push({ label: y, value: y }))\r\n        }\r\n        return options;\r\n    };\r\n\r\n    const selectedFilteredYear = filterYears().find(y => y.value === year);\r\n\r\n    const SidePanel = (\r\n        <div >\r\n            <Accordion >\r\n                <AccordionSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls=\"panel1a-content\"\r\n                    id=\"panel1a-header\"\r\n                >\r\n                    Expenses Filters\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                    <FormControl component=\"fieldset\" className={globalClasses.checkboxContainer}>\r\n                        <FormGroup>\r\n                            <FormControlLabel\r\n                                control={<Checkbox checked={fuel} onChange={handleChange} color=\"default\" size=\"small\" name=\"fuel\" />}\r\n                                label=\"Fuel\"\r\n                            />\r\n                            <FormControlLabel\r\n                                control={<Checkbox checked={service} onChange={handleChange} color=\"default\" size=\"small\" name=\"service\" />}\r\n                                label=\"Service\"\r\n                            />\r\n                            <FormControlLabel\r\n                                control={<Checkbox checked={maintenance} onChange={handleChange} color=\"default\" size=\"small\" name=\"maintenance\" />}\r\n                                label=\"Maintenance\"\r\n                            />\r\n                            <FormControlLabel\r\n                                control={<Checkbox checked={tax} onChange={handleChange} color=\"default\" size=\"small\" name=\"tax\" />}\r\n                                label=\"Road Tax\"\r\n                            />\r\n                        </FormGroup>\r\n                        <br />\r\n                        <Typography className={globalClasses.accordionHeading} >Year</Typography>\r\n                        <Select\r\n                            options={filterYears()}\r\n                            defaultValue={selectedFilteredYear}\r\n                            value={selectedFilteredYear}\r\n                            components={{\r\n                                IndicatorSeparator: () => null,\r\n                            }}\r\n                            styles={selectDropdownDateStyle}\r\n                            onChange={(data: { label: number, value: number }) => setYear(data.value)}\r\n                        />\r\n                    </FormControl>\r\n                </AccordionDetails>\r\n            </Accordion>\r\n        </div>\r\n    );\r\n\r\n    const expensesData = (): CarChartData[] => {\r\n        const cars: CarChartData[] = [];\r\n        type ExpenseType = { date: Date, cost: number, month: string };\r\n        const monthlyFuelExpenses: ExpenseType[] = myCar?.expenses?.fuelExpenses.filter(ex => ex.date.getFullYear() === year).map(f => ({ date: f.date, cost: f.costPerUnit * f.quantity, month: Months[f.date.getMonth()] })) ?? [];\r\n        const monthlyServiceExpenses: ExpenseType[] = myCar?.expenses?.serviceExpenses.filter(ex => ex.date.getFullYear() === year).map(f => ({ date: f.date, cost: f.cost, month: Months[f.date.getMonth()] })) ?? [];\r\n        const monthlyMaintenanceExpenses: ExpenseType[] = myCar?.expenses?.maintenanceExpenses.filter(ex => ex.date.getFullYear() === year).map(f => ({ date: f.date, cost: f.cost, month: Months[f.date.getMonth()] })) ?? [];\r\n        const monthlyRoadTaxExpenses: ExpenseType[] = myCar?.expenses?.roadTaxExpenses.filter(ex => ex.date.getFullYear() === year).map(f => ({ date: f.date, cost: f.cost, month: Months[f.date.getMonth()] })) ?? [];\r\n\r\n\r\n        Months.forEach(month => {\r\n            let fuelCost = 0;\r\n            let serviceCost = 0;\r\n            let maintenanceCost = 0;\r\n            let roadTaxCost = 0;\r\n            monthlyFuelExpenses.filter(mfe => mfe.month === month).forEach(f => fuelCost += f.cost);\r\n            monthlyServiceExpenses.filter(mse => mse.month === month).forEach(f => serviceCost += f.cost);\r\n            monthlyMaintenanceExpenses.filter(mme => mme.month === month).forEach(f => maintenanceCost += f.cost);\r\n            monthlyRoadTaxExpenses.filter(mrte => mrte.month === month).forEach(f => roadTaxCost += f.cost);\r\n            cars.push({\r\n                Name: month,\r\n                Fuel: Number(fuelCost.toFixed(2)),\r\n                Service: Number(serviceCost.toFixed(2)),\r\n                Maintenance: Number(maintenanceCost.toFixed(2)),\r\n                'Road Tax': Number(roadTaxCost.toFixed(2)),\r\n            });\r\n        })\r\n\r\n        return cars;\r\n    }\r\n\r\n    const MainPanel = (\r\n        <div>\r\n            <Grid container spacing={1} className={localClasses.mainContainer}>\r\n                <Grid item xs={12} className={localClasses.selectContainer}>\r\n                    <Grid container spacing={1}>\r\n                        <Grid item xs={2}>\r\n                            <Typography >Make</Typography>\r\n                            <Select\r\n                                options={makes}\r\n                                defaultValue={selectedMake}\r\n                                value={selectedMake}\r\n                                components={{\r\n                                    IndicatorSeparator: () => null,\r\n                                }}\r\n                                styles={selectDropdownDateStyle}\r\n                                onChange={(data: { label: string, value: string }) => handleMakeChange(data)}\r\n                            />\r\n\r\n                        </Grid>\r\n                        <Grid item xs={2}>\r\n                            <Typography >Year</Typography>\r\n                            <Select\r\n                                isDisabled={myMake === \"\"}\r\n                                options={years}\r\n                                defaultValue={selectedYear}\r\n                                value={selectedYear}\r\n                                components={{\r\n                                    IndicatorSeparator: () => null,\r\n                                }}\r\n                                styles={selectDropdownDateStyle}\r\n                                onChange={(data: { label: number, value: number }) => handleYearChange(data)}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={2}>\r\n                            <FormControl className={clsx(globalClasses.margin, localClasses.textFieldContainer)} variant=\"outlined\" >\r\n                                <InputLabel htmlFor=\"outlined-adornment-mileage\">Mileage</InputLabel>\r\n                                <OutlinedInput\r\n                                    id=\"outlined-adornment-Mileage\"\r\n                                    type={'number'}\r\n                                    value={mileage}\r\n                                    required\r\n                                    endAdornment={<InputAdornment position=\"end\">{mileage && mileage > 0 ? ' miles' : ''}</InputAdornment>}\r\n                                    onChange={handleMileageChange()}\r\n                                    labelWidth={70}\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={2}>\r\n                            <FormControl className={clsx(globalClasses.margin, localClasses.textFieldContainer)} variant=\"outlined\" >\r\n                                <InputLabel htmlFor=\"outlined-adornment-mileage-tolerance\">Mileage Tolerance</InputLabel>\r\n                                <OutlinedInput\r\n                                    id=\"outlined-adornment-mileage-tolerance\"\r\n                                    type={'number'}\r\n                                    value={mileageTolerance}\r\n                                    required\r\n                                    startAdornment={<InputAdornment position=\"start\">+/-</InputAdornment>}\r\n                                    onChange={handleMileageToleranceChange()}\r\n                                    labelWidth={130}\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={2}></Grid>\r\n                        <Grid item xs={2}>\r\n                            <Button autoFocus color=\"inherit\" onClick={handleSave} disabled={!isValid}>\r\n                                Save\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container spacing={1}>\r\n                        <Grid item xs={2}>\r\n                            <Typography >Model</Typography>\r\n                            <Select\r\n                                isDisabled={myMake === \"\" || myYear === 0}\r\n                                options={models}\r\n                                defaultValue={selectedModel}\r\n                                value={selectedModel}\r\n                                components={{\r\n                                    IndicatorSeparator: () => null,\r\n                                }}\r\n                                styles={selectDropdownDateStyle}\r\n                                onChange={(data: { label: string, value: string }) => handleModelChange(data)}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={2}>\r\n                            <Typography >Fuel</Typography>\r\n                            <Select\r\n                                isDisabled={myMake === \"\" || myYear === 0 || myModel === \"\"}\r\n                                options={fuelTypes}\r\n                                defaultValue={selectedFuelTypes}\r\n                                value={selectedFuelTypes}\r\n                                components={{\r\n                                    IndicatorSeparator: () => null,\r\n                                }}\r\n                                styles={selectDropdownDateStyle}\r\n                                onChange={(data: { label: FUELTYPE, value: FUELTYPE }) => handleFuelChange(data)}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={2}>\r\n                            <FormControl className={clsx(globalClasses.margin, localClasses.textFieldContainer)} variant=\"outlined\" >\r\n                                <InputLabel htmlFor=\"outlined-adornment-miles-tolerance\">Miles Tolerance</InputLabel>\r\n                                <OutlinedInput\r\n                                    id=\"outlined-adornment-miles-tolerance\"\r\n                                    type={'number'}\r\n                                    value={milesTolerance}\r\n                                    required\r\n                                    startAdornment={<InputAdornment position=\"start\">+/-</InputAdornment>}\r\n                                    onChange={handleMilesToleranceChange()}\r\n                                    labelWidth={120}\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={2}>\r\n                            <FormControl className={clsx(globalClasses.margin, localClasses.textFieldContainer)} variant=\"outlined\" >\r\n                                <InputLabel htmlFor=\"outlined-adornment-year-tolerance\">Year Tolerance</InputLabel>\r\n                                <OutlinedInput\r\n                                    id=\"outlined-adornment-year-tolerance\"\r\n                                    type={'number'}\r\n                                    value={yearTolerance}\r\n                                    required\r\n                                    startAdornment={<InputAdornment position=\"start\">+/-</InputAdornment>}\r\n                                    onChange={handleYearToleranceChange()}\r\n                                    labelWidth={120}\r\n                                />\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Grid item xs={2}></Grid>\r\n                        <Grid item xs={2}></Grid>\r\n                    </Grid>\r\n                    {\r\n                        myCar?.car &&\r\n                        <>\r\n                            <br />\r\n                            <br />\r\n                            <Grid item xs={12}>\r\n                                Expenses £\r\n                            </Grid>\r\n                        </>\r\n                    }\r\n                </Grid>\r\n            </Grid>\r\n            {myCar?.car &&\r\n                <Grid container spacing={1} className={localClasses.mainContainer}>\r\n                    <ResponsiveContainer width='100%' height={300}>\r\n                        <BarChart\r\n                            width={100}\r\n                            height={300}\r\n                            data={expensesData()}\r\n                            margin={{\r\n                                top: 20,\r\n                                right: 30,\r\n                                left: 20,\r\n                                bottom: 5,\r\n                            }}\r\n\r\n                        >\r\n                            <CartesianGrid strokeDasharray=\"3 3\" />\r\n                            <XAxis dataKey=\"Name\" />\r\n                            <YAxis tickFormatter={(value: number) => `£${value}`}/>\r\n                            <Tooltip />\r\n                            <Legend />\r\n                            {filters.tax && <Bar barSize={40} dataKey=\"RoadTax\" stackId=\"a\" fill=\"#1368CE\" unit=\"£\"/>}\r\n                            {filters.maintenance && <Bar barSize={40} dataKey=\"Maintenance\" stackId=\"a\" fill=\"#E23C4F\" unit=\"£\"/>}\r\n                            {filters.service && <Bar barSize={40} dataKey=\"Service\" stackId=\"a\" fill=\"#8492A6\" unit=\"£\"/>}\r\n                            {filters.fuel && <Bar barSize={40} dataKey=\"Fuel\" stackId=\"a\" fill=\"#80C15C\" unit=\"£\"/>}\r\n                        </BarChart>\r\n                    </ResponsiveContainer>\r\n                </Grid>\r\n            }\r\n            <Snackbar\r\n\r\n                autoHideDuration={2500}\r\n                anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\r\n                open={openSuccessSnackbar}\r\n                onClose={() => setOpenSuccessSnackbar(false)}\r\n                key={uuidv4()}\r\n\r\n            >\r\n                <Alert onClose={() => setOpenSuccessSnackbar(false)} severity=\"success\">\r\n                    Success!\r\n                </Alert>\r\n            </Snackbar>\r\n        </div>\r\n    );\r\n\r\n\r\n    return (\r\n        <MainContainer sideComponent={myCar?.car && SidePanel} mainComponent={MainPanel} />\r\n    )\r\n};\r\n\r\nexport default MyCar;\r\n\r\n\r\nconst useLocalStyles = makeStyles(() =>\r\n    createStyles({\r\n        mainContainer: {\r\n            display: 'grid',\r\n\r\n        },\r\n        selectContainer: {\r\n            margin: 10,\r\n        },\r\n        textFieldContainer: {\r\n            minWidth: 150,\r\n        }\r\n    }),\r\n);\r\n\r\nconst selectDropdownDateStyle = {\r\n    control: (styles: any) => ({\r\n        ...styles,\r\n        backgroundColor: 'white',\r\n        fontSize: 'medium',\r\n        width: '150',\r\n        cursor: 'pointer',\r\n        color: 'black',\r\n        marginBottom: 15,\r\n        marginLeft: 10,\r\n        boxShadow: '0px 0px #888888',\r\n        '&:hover': {\r\n            borderColor: 'black',\r\n        },\r\n    }),\r\n    option: (styles: any, { isDisabled, isSelected }: any) => {\r\n        return {\r\n            ...styles,\r\n            color: isSelected ? 'black' : 'black',\r\n            backgroundColor: isSelected ? 'white' : 'white',\r\n            cursor: isDisabled ? 'not-allowed' : 'pointer',\r\n        };\r\n    },\r\n    menu: (styles: any) => ({\r\n        ...styles,\r\n        marginLeft: 10,\r\n        width: '150',\r\n        marginTop: '0',\r\n        borderRadius: '0',\r\n        borderTop: '0',\r\n    }),\r\n\r\n};\r\n","import React, { useState } from 'react';\r\nimport { createStyles, makeStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { FormControl, InputAdornment, InputLabel, Link, OutlinedInput } from '@material-ui/core';\r\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\r\nimport { updateUserStore } from '../store/actions/actions';\r\nimport { useDispatch } from 'react-redux';\r\nimport { User } from '../types';\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      margin: 0,\r\n      padding: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n      position: 'absolute',\r\n      right: theme.spacing(1),\r\n      top: theme.spacing(1),\r\n      color: theme.palette.grey[500],\r\n    },\r\n  });\r\n\r\nexport interface DialogTitleProps extends WithStyles<typeof styles> {\r\n  id: string;\r\n  children: React.ReactNode;\r\n  onClose: () => void;\r\n}\r\n\r\nconst DialogTitle = withStyles(styles)((props: DialogTitleProps) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme: Theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme: Theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n    },\r\n    margin: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    textField: {\r\n      width: '60ch',\r\n    },\r\n  }),\r\n);\r\n\r\ninterface State {\r\n  password: string;\r\n  showPassword: boolean;\r\n}\r\n\r\n\r\ninterface LogInProps {\r\n    open: boolean;\r\n    setOpen: React.Dispatch<React.SetStateAction<boolean>>;\r\n    user?: User;\r\n}\r\n\r\nconst LogIn:React.FC<LogInProps> = props => {\r\n  const {open, setOpen, user} = props;\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const [username, setUsername ] = useState<string>('');\r\n  const [values, setValues] = useState<State>({\r\n    password: '',\r\n    showPassword: false,\r\n  });\r\n\r\n  const login = () => {\r\n    dispatch(updateUserStore({...user, username}));\r\n    setOpen(false);\r\n  };\r\n\r\n  const handlePasswordChange = () => (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setValues({ ...values, password: event.target.value });\r\n  };\r\n  \r\n  const handleClickShowPassword = () => {\r\n    setValues({ ...values, showPassword: !values.showPassword });\r\n  };\r\n  \r\n  const handleUsernameChange = () => (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setUsername(event.target.value);\r\n  };\r\n\r\n\r\n  const handleMouseDownPassword = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog onClose={() => setOpen(false)} aria-labelledby=\"customized-dialog-title\" open={open} fullWidth>\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={() => setOpen(false)}>\r\n          Log In\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n        <FormControl className={clsx(classes.margin, classes.textField)} variant=\"outlined\" fullWidth >\r\n          <InputLabel htmlFor=\"outlined-adornment-username\">Username</InputLabel>\r\n          <OutlinedInput\r\n            id=\"outlined-adornment-username\"\r\n            type={'text'}\r\n            value={username}\r\n            onChange={handleUsernameChange()}\r\n            labelWidth={70}\r\n            error={username === ''}\r\n          />\r\n        </FormControl>\r\n          <FormControl className={clsx(classes.margin, classes.textField)} variant=\"outlined\" fullWidth >\r\n          <InputLabel htmlFor=\"outlined-adornment-password\">Password</InputLabel>\r\n          <OutlinedInput\r\n            id=\"outlined-adornment-password\"\r\n            type={values.showPassword ? 'text' : 'password'}\r\n            value={values.password}\r\n            onChange={handlePasswordChange()}\r\n            error={values.password === ''}\r\n            endAdornment={\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  aria-label=\"toggle password visibility\"\r\n                  onClick={handleClickShowPassword}\r\n                  onMouseDown={handleMouseDownPassword}\r\n                  edge=\"end\"\r\n                >\r\n                  {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            }\r\n            labelWidth={70}\r\n          />\r\n        </FormControl>\r\n        <Link href={\"https://www.google.com\"} style={{\"marginLeft\": 10}}>Reset your password here.</Link>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={() => login()} color=\"primary\">\r\n            Log In\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LogIn;","import React, { useState } from 'react';\r\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { FormControl, InputAdornment, InputLabel, OutlinedInput } from '@material-ui/core';\r\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\r\nimport useStyles from '../styles/styles';\r\nimport { useDispatch } from 'react-redux';\r\nimport { updateUserStore } from '../store/actions/actions';\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      margin: 0,\r\n      padding: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n      position: 'absolute',\r\n      right: theme.spacing(1),\r\n      top: theme.spacing(1),\r\n      color: theme.palette.grey[500],\r\n    },\r\n  });\r\n\r\nexport interface DialogTitleProps extends WithStyles<typeof styles> {\r\n  id: string;\r\n  children: React.ReactNode;\r\n  onClose: () => void;\r\n}\r\n\r\nconst DialogTitle = withStyles(styles)((props: DialogTitleProps) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme: Theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme: Theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\ninterface State {\r\n  firstPassword: string;\r\n  showFirstPassword: boolean;\r\n  secondPassword: string;\r\n  showSecondPassword: boolean;\r\n}\r\n\r\n\r\ninterface SignUpProps {\r\n  open: boolean;\r\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nconst SignUp: React.FC<SignUpProps> = props => {\r\n  const { open, setOpen } = props;\r\n  const dispatch = useDispatch();\r\n  const globalClasses = useStyles();\r\n  const [username, setUsername] = useState<string>('');\r\n  const [email, setEmail] = useState<string>('');\r\n  const [isEmailValid, setIsEmailValid] = useState<boolean | undefined>(undefined);\r\n  const [isUserNameValid, setIsUsernameValid] = useState<boolean | undefined>(undefined);\r\n  const [is1PassValid, setIs1PassValid] = useState<boolean | undefined>(undefined);\r\n  const [is2PassValid, setIs2PassValid] = useState<boolean | undefined>(undefined);\r\n  const [values, setValues] = useState<State>({\r\n    firstPassword: '',\r\n    showFirstPassword: false,\r\n    secondPassword: '',\r\n    showSecondPassword: false,\r\n  });\r\n\r\n  const singUp = () => {\r\n    dispatch(updateUserStore({email, username}));\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleFirstPasswordChange = () => (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setValues({ ...values, firstPassword: event.target.value });\r\n    setIs1PassValid(event.target.value !== '');\r\n  };\r\n  const handleClickShowFirstPassword = () => {\r\n    setValues({ ...values, showFirstPassword: !values.showFirstPassword });\r\n  };\r\n\r\n  const handleSecondPasswordChange = () => (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setValues({ ...values, secondPassword: event.target.value });\r\n    setIs2PassValid(event.target.value === values.firstPassword);\r\n  };\r\n  const handleClickShowSecondPassword = () => {\r\n    setValues({ ...values, showSecondPassword: !values.showFirstPassword });\r\n  };\r\n\r\n  const handleUsernameChange = () => (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setUsername(event.target.value);\r\n    setIsUsernameValid(event.target.value !== '');\r\n  };\r\n\r\n  const handleEmailChange = () => (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setEmail(event.target.value);\r\n    setIsEmailValid(event.target.value !== '');\r\n  };\r\n\r\n  const handleMouseDownPassword = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog onClose={() => setOpen(false)} aria-labelledby=\"customized-dialog\" open={open} fullWidth>\r\n        <DialogTitle id=\"customized-dialog\" onClose={() => setOpen(false)}>\r\n          Sign Up\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n          <FormControl className={clsx(globalClasses.margin, globalClasses.textField)} variant=\"outlined\" fullWidth >\r\n            <InputLabel htmlFor=\"outlined-adornment-email\">Email</InputLabel>\r\n            <OutlinedInput\r\n              id=\"outlined-adornment-email\"\r\n              type={'text'}\r\n              value={email}\r\n              required\r\n              onChange={handleEmailChange()}\r\n              labelWidth={70}\r\n              error={email === ''}\r\n            />\r\n            {isEmailValid === false && <span className={globalClasses.errorText}>The email is required!</span>}\r\n          </FormControl>\r\n          <FormControl className={clsx(globalClasses.margin, globalClasses.textField)} variant=\"outlined\" fullWidth >\r\n            <InputLabel htmlFor=\"outlined-adornment-username\">Username</InputLabel>\r\n            <OutlinedInput\r\n              id=\"outlined-adornment-username\"\r\n              type={'text'}\r\n              value={username}\r\n              required\r\n              onChange={handleUsernameChange()}\r\n              labelWidth={70}\r\n              error={username === ''}\r\n            />\r\n            {isUserNameValid === false && <span className={globalClasses.errorText}>The username is required!</span>}\r\n          </FormControl>\r\n          <FormControl className={clsx(globalClasses.margin, globalClasses.textField)} variant=\"outlined\" fullWidth >\r\n            <InputLabel htmlFor=\"outlined-adornment-password\">Password</InputLabel>\r\n            <OutlinedInput\r\n              id=\"outlined-adornment-password\"\r\n              type={values.showFirstPassword ? 'text' : 'password'}\r\n              value={values.firstPassword}\r\n              required\r\n              onChange={handleFirstPasswordChange()}\r\n              error={values.firstPassword === ''}\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    aria-label=\"toggle password visibility\"\r\n                    onClick={handleClickShowFirstPassword}\r\n                    onMouseDown={handleMouseDownPassword}\r\n                    edge=\"end\"\r\n                  >\r\n                    {values.showFirstPassword ? <Visibility /> : <VisibilityOff />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n              labelWidth={70}\r\n            />\r\n            {is1PassValid === false && <span className={globalClasses.errorText}>The password is required!</span>}\r\n          </FormControl>\r\n          <FormControl className={clsx(globalClasses.margin, globalClasses.textField)} variant=\"outlined\" fullWidth >\r\n            <InputLabel htmlFor=\"outlined-adornment-confirm-password\">Confirm Password</InputLabel>\r\n            <OutlinedInput\r\n              id=\"outlined-adornment-confirm-password\"\r\n              type={values.showSecondPassword ? 'text' : 'password'}\r\n              required\r\n              value={values.secondPassword}\r\n              onChange={handleSecondPasswordChange()}\r\n              error={values.secondPassword === '' || values.secondPassword !== values.firstPassword}\r\n              endAdornment={\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    aria-label=\"toggle password visibility\"\r\n                    onClick={handleClickShowSecondPassword}\r\n                    onMouseDown={handleMouseDownPassword}\r\n                    edge=\"end\"\r\n                  >\r\n                    {values.showSecondPassword ? <Visibility /> : <VisibilityOff />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              }\r\n              labelWidth={132}\r\n            />\r\n            {is2PassValid === false && <span className={globalClasses.errorText}>The two passwords don't match!</span>}\r\n          </FormControl>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={singUp} color=\"primary\" disabled={!isEmailValid || !isUserNameValid || !is1PassValid || !is2PassValid}>\r\n            Sign Up\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignUp;","import { Link, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport useStyles from '../styles/styles';\r\n\r\nconst Footer: React.FC<{}> = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.footerContainer}>\r\n            <Typography className={classes.footerText}>Aplication Created By <Link href='https://www.linkedin.com/in/bogdan-mihoci-729561188/'>Bogdan Mihoci</Link></Typography>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Footer;","import { Avatar, Button, Grid, makeStyles, Tab, Tabs, Typography } from '@material-ui/core';\r\nimport { useHistory } from 'react-router-dom';\r\nimport React, { useEffect } from 'react';\r\nimport LogIn from './LogIn';\r\nimport useStyles from '../styles/styles';\r\nimport SignUp from './SignUp';\r\nimport { IRootState } from '../types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { clearAll } from '../store/actions/actions';\r\nimport Footer from './Footer';\r\n\r\nconst AppContainer: React.FC<{}> = (props) => {\r\n\r\n    const classes = useStyles();\r\n    const localClasses = useLocalStyles();\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n\r\n    const userSelector = (state: IRootState) => state.app.appState.user;\r\n    const user = useSelector(userSelector);\r\n\r\n    const myCarSelector = (state: IRootState) => state.app.appState.myCar\r\n    const myCar = useSelector(myCarSelector);\r\n\r\n    const [navValue, setNavValue] = React.useState<number>(0);\r\n    const [openLoginDialog, setOpenLoginDialog] = React.useState<boolean>(false);\r\n    const [openSignUpDialog, setOpenSignUpDialog] = React.useState<boolean>(false);\r\n\r\n    const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\r\n        setNavValue(newValue);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (navValue === 0) {\r\n            history.push('/');\r\n        } else if (navValue === 1) {\r\n            history.push('/cars');\r\n        } else if (navValue === 2) {\r\n            history.push('/expenses');\r\n        }\r\n    }, [navValue, history]);\r\n\r\n    const logOut = () => {\r\n        dispatch(clearAll());\r\n    };\r\n\r\n    return (\r\n        <div className={classes.main}>\r\n            <Grid container spacing={3} className={classes.navBar}>\r\n                <Grid item xs={3}>\r\n                    <Grid container spacing={1} >\r\n                        <Grid item xs={1} sm={1}>\r\n                            <Avatar className={classes.avatar} src=\"https://car-expenses-bucket.s3-eu-west-1.amazonaws.com/logo.PNG\" />\r\n                        </Grid>\r\n                        <Grid item xs={11} sm={11}>\r\n                            <Typography className={classes.appName}>My Car Expense</Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={7} className={localClasses.navigation}>\r\n                    {\r\n                        user?.username &&\r\n                        <Tabs\r\n                            className={localClasses.tabsRoot}\r\n                            value={navValue}\r\n                            TabIndicatorProps={{ style: { display: \"none\" } }}\r\n                            textColor=\"primary\"\r\n                            onChange={handleChange}\r\n                        >\r\n                            <Tab className={localClasses.tabRoot} label=\"My Car\" />\r\n                            <Tab className={localClasses.tabRoot} label=\"Cars\" disabled={myCar?.car === undefined} />\r\n                            <Tab className={localClasses.tabRoot} label=\"Expenses\" disabled={myCar?.car === undefined} />\r\n                        </Tabs>\r\n                    }\r\n                </Grid>\r\n                {\r\n                    user?.username ?\r\n                        <Grid item xs={2} className={classes.navigation}>\r\n                            <Button className={classes.navBotton} onClick={() => { }} >{user.username}</Button>\r\n                            <Button className={classes.navBotton} onClick={() => logOut()} >Log Out</Button>\r\n                        </Grid> :\r\n                        <Grid item xs={2} className={classes.navigation}>\r\n                            <Button className={classes.navBotton} onClick={() => setOpenLoginDialog(true)} >Log In</Button>\r\n                            <Button className={classes.navBotton} onClick={() => setOpenSignUpDialog(true)} >Sign Up</Button>\r\n                        </Grid>\r\n                }\r\n            </Grid>\r\n            <Grid container spacing={3}>\r\n                {\r\n                    user?.username && props.children\r\n                }\r\n            </Grid>\r\n            <Footer />\r\n            <LogIn open={openLoginDialog} user={user} setOpen={setOpenLoginDialog} />\r\n            <SignUp open={openSignUpDialog} setOpen={setOpenSignUpDialog} />\r\n        </div >\r\n    );\r\n};\r\n\r\nexport default AppContainer;\r\n\r\nconst tabHeight = '24px' // default: '48px'\r\nconst useLocalStyles = makeStyles(theme => ({\r\n    tabsRoot: {\r\n        minHeight: tabHeight,\r\n        height: tabHeight,\r\n    },\r\n    tabRoot: {\r\n        minHeight: tabHeight,\r\n        height: tabHeight\r\n\r\n    },\r\n    navigation: {\r\n        alignItems: 'center',\r\n        display: 'flex',\r\n        backgroundColor: '#83B3AB',\r\n        justifyContent: 'flex-start',\r\n    },\r\n}));","import React from 'react';\r\n\r\nconst Loader: React.FC<{ text?: string }> = ({ text = '' }) => {\r\n  return (\r\n    <div className=\"flex\">\r\n      <div id=\"splash-screen\">\r\n        <div className=\"center\">\r\n          <div className=\"logo\">\r\n            <img src=\"https://d8bnsroxtx1yg.cloudfront.net/agent3/logo.svg\" width=\"250\" alt=\"logo\" />\r\n          </div>\r\n\r\n          <div className=\"preloader\">\r\n            <div className=\"sk-folding-cube\">\r\n              <div className=\"sk-cube1 sk-cube\" />\r\n              <div className=\"sk-cube2 sk-cube\" />\r\n              <div className=\"sk-cube4 sk-cube\" />\r\n              <div className=\"sk-cube3 sk-cube\" />\r\n            </div>\r\n\r\n            <div className=\"splash-text\">{text}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;","import { makeStyles, createStyles, useTheme } from '@material-ui/core/styles';\r\n\r\nconst defaultFont = {\r\n    fontFamily: [\r\n        'ApercuPro', 'Arial', 'Helvetica', 'sans-serif'\r\n    ].join(',')\r\n};\r\n\r\nconst useStyles = makeStyles(() =>\r\n    createStyles({\r\n        wrapper: {\r\n            display: 'flex',\r\n            flexWrap: 'wrap',\r\n            justifyContent: 'center',\r\n            backgroundColor: '#FAFAFA'\r\n        },\r\n        logoContainer: {\r\n            flexBasis: \"100%\",\r\n            textAlign: 'center',\r\n            margin: \"15px 0 15px 0\",\r\n\r\n        },\r\n        image: {\r\n            justifyContent: 'center',\r\n            height: 350,\r\n        },\r\n        body: {\r\n            flexBasis: \"100%\",\r\n            fontSize: '60px',\r\n            defaultFont,\r\n            textAlign: 'center',\r\n            color: \"#232227\"\r\n        },\r\n    }),\r\n);\r\n\r\nconst NotFound = () => {\r\n    const theme = useTheme();\r\n    const classes = useStyles(theme);\r\n    return (\r\n        <div className={classes.wrapper}>\r\n                    <br />\r\n                    <span className={classes.body}>404 - Page Not Found</span>\r\n                    <br />\r\n                    <div className={classes.logoContainer}>\r\n                        <img\r\n                            className={classes.image}\r\n                            src=\"https://agent3-platform-cdn.s3-eu-west-1.amazonaws.com/signposts.png\"\r\n                            alt=\"open-door\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n    );\r\n};\r\n\r\nexport default NotFound;","import React, { Suspense } from 'react';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport { Switch, Redirect, Route } from 'react-router-dom';\r\nimport Expenses from '../expenses/Expenses';\r\nimport Cars from '../home/Cars';\r\nimport MyCar from '../myCar/MyCar';\r\nimport AppContainer from '../AppContainer';\r\nimport Loader from './Loader';\r\nimport NotFound from './NotFound';\r\n\r\nconst AppRoutes: React.FC = () => {\r\n\r\n  return (\r\n    <Router basename={'my-car-expenses'}>\r\n      <Suspense fallback={<Loader />}>\r\n        <AppContainer >\r\n          <Switch>\r\n            <Route exact path=\"/\" component={MyCar} />\r\n            <Route exact path=\"/cars\" component={Cars} />\r\n            <Route exact path=\"/expenses\" component={Expenses} />\r\n\r\n            <Route exact path=\"/404\" component={NotFound} />\r\n            <Redirect to=\"/404\" />\r\n          </Switch>\r\n        </AppContainer>\r\n      </Suspense>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRoutes;\r\n","import { Provider } from 'react-redux';\r\nimport store from '../src/store';\r\nimport AppRoutes from './components/routes/AppRoutes';\r\n\r\nconst App = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <AppRoutes/>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}